{"version":3,"sources":["Hive/Sidebar/Grid/Grid.module.css","Hive/Header/CalendarButton/DatePicker/DatePicker.module.css","Hive/Buttons/Buttons.module.css","Hive/Sidebar/Progress/Progress.module.css","Modal/Modal.module.css","Hive/Header/HeaderButton.module.css","Hive/Sidebar/WordList/WordList.module.css","Hive/Sidebar/WordList/Word/Word.module.css","Hive/Sidebar/Sidebar.module.css","Hive/Hive.module.css","Loading/Loading.module.css","Hive/Sidebar/WordList/RevealButton/RevealButton.module.css","Hive/Messages/Messages.module.css","Hive/Sidebar/Grid/GridInfo/GridInfo.module.css","Hive/Sidebar/IconSidebar/IconSidebar.module.css","Hive/Sidebar/WordList/WordsInfo/WordsInfo.module.css","Hive/Header/InfoButton/InfoButton.module.css","Hive/Header/CalendarButton/CalendarButton.module.css","Hive/Header/Header.module.css","api.ts","hashCode/hashCode.ts","twoDigits.ts","hooks.ts","useNoBodyScroll.ts","Loading/Loading.tsx","LettersProvider/LettersProvider.tsx","LettersProvider/useLetters.ts","WordProvider/WordsProvider.tsx","WordProvider/useWords.ts","isPangram.ts","Hive/hooks.ts","Hive/Sidebar/Grid/WordGrid/WordGrid.tsx","Modal/Modal.tsx","Hive/Sidebar/Grid/GridInfo/GridInfo.tsx","Hive/Sidebar/Grid/Grid.tsx","Hive/Sidebar/IconSidebar/IconSidebar.tsx","Hive/Sidebar/Progress/Progress.tsx","Hive/Sidebar/WordList/WordsInfo/WordsInfo.tsx","Hive/useRevealed.ts","Hive/Sidebar/WordList/RevealButton/RevealButton.tsx","Hive/useFoundWords.ts","Hive/Sidebar/WordList/Word/Word.tsx","Hive/Sidebar/WordList/WordList.tsx","Hive/Sidebar/Sidebar.tsx","shuffle.ts","Hive/Buttons/useShuffledLetters.ts","Hive/Buttons/Buttons.tsx","Humle/Humle.svg","Humle/Humle.tsx","Hive/Header/InfoButton/InfoButton.tsx","Hive/Header/CalendarButton/DatePicker/DatePicker.tsx","Hive/Header/CalendarButton/CalendarButton.tsx","Hive/Header/Header.tsx","Hive/Messages/ErrorMessage.tsx","Hive/Messages/Messages.tsx","Hive/Hive.tsx","pages/Play/Play.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","gzipJsonFetch","url","fetch","headers","then","resp","arrayBuffer","buf","Uint8Array","pako","inflate","TextDecoder","decode","str","JSON","parse","MAX_VALUE","Math","pow","hashCode","input","hash","i","length","charCodeAt","twoDigits","v","TODAY","now","Date","getFullYear","getMonth","getDate","map","join","useGameId","gameIdParam","useParams","gameId","gameHash","split","reverse","useNoBodyScroll","useEffect","document","body","classList","add","remove","Loading","className","classes","container","ldsRipple","Context","createContext","centerLetter","outerLetters","all","puzzleId","LettersProvider","children","useState","option","setOption","error","setError","process","options","catch","e","console","letters","filter","letter","sort","Provider","value","useLetters","useContext","words","WordsProvider","setWords","key","substring","obj","loadedWords","word","includes","message","useWords","isPangram","Set","size","useScore","score","useMemo","bonus","reduce","total","wordScore","useGame","EMPTY","filler","WordGrid","range","shortest","longest","columns","totals","push","count","matchingWords","cells","border","matchingLength","grid","Modal","title","onClose","onKeyDown","useCallback","window","addEventListener","removeEventListener","modalBackground","onClick","modal","stopPropagation","header","aria-label","contents","footer","Info","showing","setShowing","button","cls","classNames","Boolean","Grid","foundWords","found","allWords","mode","setMode","gridWords","foundLookup","acc","min","max","active","remaining","GridInfo","IconSidebar","stack","Progress","currentPoints","totalPoints","percent","genius","bars","progressBarContainer","id","progress","style","width","toFixed","help","WordsInfo","href","target","rel","useRevealed","revealed","setLocalRevealed","when","localStorage","getItem","revealAnswers","setItem","toISOString","dispatchEvent","CustomEvent","detail","onRevealed","RevealButton","prompting","setPrompting","revealContainer","reveal","disabled","useFoundWords","item","saved","Array","isArray","ex","getSavedWords","setStateFound","addFoundWord","newWord","existing","newWords","stringify","foundSet","blurLink","currentTarget","blur","Word","has","pangram","encodeURIComponent","WordList","cleaned","wordList","Sidebar","column","shuffle","original","a","random","b","useShuffledLetters","shuffled","setShuffled","shuffleLetters","reshuffle","Buttons","onGuess","guess","setGuess","guessRef","useRef","current","makeGuess","onLetterClick","event","getAttribute","g","onBackspace","substr","onKeyPress","preventDefault","toLocaleLowerCase","LetterButton","rest","data-letter","letterButton","CenterLetterButton","props","letterButtons","topRow","middleRow","bottomRow","controls","Icon","src","SVG","height","margin","padding","alt","LAST_CLOSED_DATE","InfoButton","headerClasses","MONTHS","DAYS","DAY_KEYS","today","DatePicker","onChange","currentGameDate","ymd","match","slice","Number","year","month","day","isProbablyDate","setYear","setMonth","changeYear","delta","y","changeMonth","m","added","monthGrid","dayOfWeek","getDay","dayHeader","daysInMonth","isToday","isCurrent","dateButton","todayButton","currentButton","ariaLabel","center","CalendarButton","history","useHistory","onNewDatePicked","Header","to","ErrorMessage","msg","reason","Messages","displayedMessage","setDisplayedMessage","timerIdRef","showMessage","clearTimeout","setTimeout","undefined","onBadGuess","badGuess","onPangram","Hive","gameContainer","buttonsContainer","Play","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cb12ad81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Grid_container__2Ppj6\",\"grid\":\"Grid_grid__3JKXm\",\"border\":\"Grid_border___HdCe\",\"letter\":\"Grid_letter__1Q4sA\",\"filler\":\"Grid_filler__2neQo\",\"header\":\"Grid_header__mz81U\",\"mode\":\"Grid_mode__iq0BK\",\"active\":\"Grid_active__1OK2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"DatePicker_header__3oWo4\",\"center\":\"DatePicker_center__3IS8k\",\"monthGrid\":\"DatePicker_monthGrid__15JAF\",\"dateButton\":\"DatePicker_dateButton__3t50Y\",\"todayButton\":\"DatePicker_todayButton__USWS_\",\"currentButton\":\"DatePicker_currentButton__3kv-Y\",\"dayHeader\":\"DatePicker_dayHeader__BgL3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Buttons_container__1Zt8k\",\"guess\":\"Buttons_guess__2Anft\",\"letterButton\":\"Buttons_letterButton__1mMw1\",\"centerLetter\":\"Buttons_centerLetter__35133\",\"letterButtons\":\"Buttons_letterButtons__3XtpL\",\"controls\":\"Buttons_controls__vjaFF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Progress_container__2bfaL\",\"bars\":\"Progress_bars__19pOs\",\"progressBarContainer\":\"Progress_progressBarContainer__zq5aQ\",\"progress\":\"Progress_progress__35HTX\",\"genius\":\"Progress_genius__CHfIn\",\"currentPoints\":\"Progress_currentPoints__dgHkL\",\"totalPoints\":\"Progress_totalPoints__K7MCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Modal_header__2ZLRN\",\"footer\":\"Modal_footer__3LLGM\",\"contents\":\"Modal_contents__2N7hF\",\"modalBackground\":\"Modal_modalBackground__gT2gd\",\"modal\":\"Modal_modal__lEGX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderButton_button__2v-ld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WordList_container__3HxBt\",\"wordList\":\"WordList_wordList__27YZp\",\"content\":\"WordList_content__1GVCz\",\"count\":\"WordList_count__31ox3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"word\":\"Word_word__391Ih\",\"revealed\":\"Word_revealed__18kLo\",\"pangram\":\"Word_pangram__sghFn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"Sidebar_column__1BssC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hive_container__1Zjua\",\"gameContainer\":\"Hive_gameContainer__23RNb\",\"buttonsContainer\":\"Hive_buttonsContainer__3BlGP\",\"header\":\"Hive_header__1Y6La\",\"footer\":\"Hive_footer__36eBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loading_container__3Q6Jl\",\"ldsRipple\":\"Loading_ldsRipple__3LZlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reveal\":\"RevealButton_reveal__1V7u7\",\"revealContainer\":\"RevealButton_revealContainer__1AyJ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Messages_container__r77DS\",\"pangram\":\"Messages_pangram__2KAkr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"GridInfo_button__348Wh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stack\":\"IconSidebar_stack__2Y6ba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"WordsInfo_button__2hHAV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"InfoButton_button__3liaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CalendarButton_button__317hN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Yh4QF\"};","import pako from 'pako';\n\nexport const jsonFetch = (url: string) =>\n  fetch(url, { headers: { 'Content-Type': 'application/json' } }).then((resp) =>\n    resp.json()\n  );\n\nexport const gzipJsonFetch = (url: string) =>\n  fetch(url, {\n    headers: { 'Content-Type': 'application/json', 'Content-Encoding': 'gzip' },\n  })\n    .then((resp) => resp.arrayBuffer())\n    .then((buf) => new Uint8Array(buf))\n    .then((buf) => pako.inflate(buf))\n    .then((buf) => new TextDecoder('utf-8').decode(buf))\n    .then((str) => JSON.parse(str));\n","const MAX_VALUE = Math.pow(2, 32);\n\nconst hashCode = (input: string) => {\n  let hash = 0;\n  for (let i = 0; i < input.length; i += 1) {\n    const char = input.charCodeAt(i);\n    hash = (31 * hash + char) % MAX_VALUE;\n  }\n  return hash;\n};\n\nexport default hashCode;\n","const twoDigits = (v: number) => {\n  if (v < 10) {\n    return `0${v}`;\n  }\n  return v;\n};\n\nexport default twoDigits;\n","import { useParams } from 'react-router-dom';\nimport hashCode from './hashCode';\nimport twoDigits from './twoDigits';\n\nconst TODAY = (() => {\n  const now = new Date();\n  return [now.getFullYear(), now.getMonth() + 1, now.getDate()]\n    .map(twoDigits)\n    .join('-');\n})();\n\nexport const isProbablyDate = (gameId: string) => {\n  if (!gameId) {\n    return false;\n  }\n\n  const ymd: unknown[] | null = gameId.match(\n    /^([0-9]{4})-([0-9]{2})-([0-9]{2})$/\n  );\n\n  if (!ymd) {\n    return false;\n  }\n\n  const rest = ymd.slice(1);\n  if (rest.length !== 3) {\n    return false;\n  }\n\n  const [year, month, day] = rest.map(Number);\n\n  // Yeah, it's a best-effort thing.\n  return year && month >= 1 && month <= 12 && day >= 1 && day <= 31;\n};\n\nexport const useGameId = () => {\n  const { gameId: gameIdParam } = useParams<{ gameId?: string }>();\n  const gameId = gameIdParam ?? TODAY;\n  const gameHash = hashCode(\n    // Note: we reverse the game ID here because otherwise, sequential dates\n    // will only have hashCodes that differ by one value. Instead, we want to\n    // put the least-significant bit in the beginning to lead to more entropy.\n    // Of course, it's not real entropy but that's not really what we want here.\n    gameId.split('').reverse().join('')\n  );\n\n  return { gameId, gameHash };\n};\n","import { useEffect } from 'react';\n\nexport const useNoBodyScroll = () => {\n  useEffect(() => {\n    document.body.classList.add('no-scroll');\n    return () => {\n      document.body.classList.remove('no-scroll');\n    };\n  }, []);\n};\n","import { useNoBodyScroll } from '../useNoBodyScroll';\nimport classes from './Loading.module.css';\n\nconst Loading = () => {\n  useNoBodyScroll();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.ldsRipple}>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import { createContext, useEffect, useState } from 'react';\nimport { gzipJsonFetch } from '../api';\nimport { useGameId } from '../hooks';\nimport Loading from '../Loading';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype ContextType = {\n  centerLetter: string;\n  outerLetters: [string, string, string, string, string, string];\n  all: string;\n  puzzleId: string;\n};\n\nexport const Context = createContext<ContextType>({\n  centerLetter: '',\n  outerLetters: ['', '', '', '', '', ''],\n  all: '',\n  puzzleId: '',\n});\n\nconst LettersProvider = ({ children }: Props) => {\n  const { gameHash } = useGameId();\n  const [option, setOption] = useState('');\n  const [error, setError] = useState<Error | undefined>();\n\n  useEffect(() => {\n    gzipJsonFetch(`${process.env.PUBLIC_URL}/words/options.json.gz`)\n      .then((options) => options[gameHash % options.length])\n      .then(setOption)\n      .catch((e) => {\n        console.error(e);\n        setError(e);\n      });\n  }, [gameHash]);\n\n  if (error) {\n    return <div>Error!</div>;\n  }\n\n  if (!option) {\n    return <Loading />;\n  }\n\n  const letters = option.split('');\n  const centerLetter = letters[gameHash % letters.length];\n  const outerLetters = letters.filter(\n    (letter) => letter !== centerLetter\n  ) as ContextType['outerLetters'];\n\n  const puzzleId = [centerLetter, ...outerLetters.sort()].join('');\n\n  return (\n    <Context.Provider\n      key={puzzleId}\n      value={{ centerLetter, outerLetters, all: option, puzzleId }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport default LettersProvider;\n","import { useContext } from 'react';\nimport { Context } from './LettersProvider';\n\nexport const useLetters = () => {\n  return useContext(Context);\n};\n","import { createContext, useEffect, useState } from 'react';\nimport { gzipJsonFetch } from '../api';\nimport { useLetters } from '../LettersProvider';\nimport Loading from '../Loading';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype ContextType = {\n  words: string[];\n};\n\nexport const Context = createContext<ContextType>({\n  words: [],\n});\n\nconst WordsProvider = ({ children }: Props) => {\n  const { all, centerLetter, puzzleId } = useLetters();\n\n  const [words, setWords] = useState<string[]>([]);\n  const [error, setError] = useState<Error | undefined>();\n\n  useEffect(() => {\n    const key = all.substring(0, 3);\n    const url = `${process.env.PUBLIC_URL}/words/${key}.json.gz`;\n    gzipJsonFetch(url)\n      .then((obj) => obj[all])\n      .then((loadedWords) =>\n        loadedWords.filter((word: string) => word.includes(centerLetter))\n      )\n      .then(setWords)\n      .catch(setError);\n  }, [all, centerLetter]);\n\n  if (error) {\n    return <pre>{error.message}</pre>;\n  }\n\n  if (words.length === 0) {\n    return <Loading />;\n  }\n\n  return (\n    <Context.Provider key={puzzleId} value={{ words }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport default WordsProvider;\n","import { useContext } from 'react';\nimport { Context } from './WordsProvider';\n\nexport const useWords = () => {\n  return useContext(Context);\n};\n","const isPangram = (str: string) => {\n  return new Set(str.split('')).size === 7;\n};\n\nexport default isPangram;\n","import { useContext, useMemo } from 'react';\nimport isPangram from '../isPangram';\nimport { Context } from './Hive';\n\nexport const useScore = (words: string[]) => {\n  const score = useMemo(() => {\n    return words\n      .map((word) => {\n        if (word.length === 4) {\n          return 1;\n        }\n\n        if (word.length < 7) {\n          return word.length;\n        }\n\n        const bonus = isPangram(word) ? 7 : 0;\n        return word.length + bonus;\n      })\n      .reduce((total, wordScore) => total + wordScore, 0);\n  }, [words]);\n\n  return { score };\n};\n\nexport const useGame = () => {\n  return useContext(Context);\n};\n","import { useLetters } from '../../../../LettersProvider';\nimport classes from '../Grid.module.css';\n\ntype Props = {\n  words: string[];\n  range: [number, number];\n};\n\nconst EMPTY = <span className={classes.filler}>&ndash;</span>;\n\nconst WordGrid = ({ words, range: [shortest, longest] }: Props) => {\n  const { all } = useLetters();\n\n  const columns = [\n    <th key=\"blank\">&nbsp;</th>, //\n  ];\n  const totals = [];\n  for (let i = shortest; i <= longest; i += 1) {\n    columns.push(<th key={i}>{i}</th>);\n\n    const count = words.filter((word) => word.length === i).length;\n    totals.push(<td key={`total @ ${i}`}>{count || EMPTY}</td>);\n  }\n  columns.push(<th key=\"column-sum\">Σ</th>);\n\n  const body = [];\n  for (let i = 0; i < all.length; i += 1) {\n    const letter = all[i];\n    const matchingWords = words.filter((word) => word[0] === letter);\n\n    const cells = [\n      <td key={letter} className={[classes.border, classes.letter].join(' ')}>\n        {letter}\n      </td>,\n    ];\n    for (let i = shortest; i <= longest; i += 1) {\n      const matchingLength = matchingWords.filter((word) => word.length === i)\n        .length;\n      cells.push(<td key={`${letter} @ ${i}`}>{matchingLength || EMPTY}</td>);\n    }\n    cells.push(\n      <td key={`${letter} @ total`} className={classes.border}>\n        {matchingWords.length || EMPTY}\n      </td>\n    );\n\n    body.push(<tr key={`row-${letter}`}>{cells}</tr>);\n  }\n\n  body.push(\n    <tr key=\"row-totals\" className={classes.border}>\n      <td>Σ</td>\n      {totals}\n      <td>{words.length}</td>\n    </tr>\n  );\n\n  return (\n    <table className={classes.grid}>\n      <thead>\n        <tr className={classes.border}>{columns}</tr>\n      </thead>\n      <tbody>{body}</tbody>\n    </table>\n  );\n};\n\nexport default WordGrid;\n","import classes from './Modal.module.css';\nimport { MdClose as Close } from 'react-icons/md';\nimport { useNoBodyScroll } from '../useNoBodyScroll';\nimport { useCallback, useEffect } from 'react';\n\ntype Props = {\n  title: string;\n  children: React.ReactNode;\n  onClose: () => void;\n};\n\nconst Modal = ({ children, title, onClose }: Props) => {\n  useNoBodyScroll();\n\n  const onKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeyDown);\n    return () => {\n      window.removeEventListener('keydown', onKeyDown);\n    };\n  }, [onKeyDown]);\n\n  return (\n    <div className={classes.modalBackground} onClick={onClose}>\n      <div className={classes.modal} onClick={(e) => e.stopPropagation()}>\n        <div className={classes.header}>\n          <h2>{title}</h2>\n          <button onClick={onClose} aria-label=\"lukk vinduet\">\n            <Close />\n          </button>\n        </div>\n        <div className={classes.contents}>{children}</div>\n        <div className={classes.footer}>\n          <button onClick={onClose}>Lukk</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import classes from './GridInfo.module.css';\nimport { MdHelpOutline as HelpIcon } from 'react-icons/md';\nimport { useMemo, useState } from 'react';\nimport Modal from 'Modal';\n\nconst Info = () => {\n  const [showing, setShowing] = useState(false);\n\n  const modal = useMemo(() => {\n    if (!showing) {\n      return null;\n    }\n    return (\n      <Modal title=\"Oversikt\" onClose={() => setShowing(false)}>\n        <p>\n          Oversikten er et verktøy for å hjelp du finne alle ordene i\n          puslespillet. Radene er ord som starter med hver bokstav, og kolonnene\n          er hvor mange ord av hver lengde.\n        </p>\n        <p>Oversikten viser ord totalt, også. Lykke til med å finne alt!</p>\n      </Modal>\n    );\n  }, [showing, setShowing]);\n\n  return (\n    <>\n      <button\n        className={classes.button}\n        onClick={() => setShowing(true)}\n        aria-label=\"Oversikten hjelp\"\n      >\n        <HelpIcon />\n      </button>\n      {modal}\n    </>\n  );\n};\n\nexport default Info;\n","import { useGame } from 'Hive/hooks';\nimport { useMemo, useState } from 'react';\nimport { useWords } from 'WordProvider';\nimport classes from './Grid.module.css';\nimport WordGrid from './WordGrid';\nimport GridInfo from './GridInfo';\n\nconst cls = (...classNames: (string | boolean)[]): string => {\n  return classNames.filter(Boolean).join(' ');\n};\n\nconst Grid = () => {\n  const { found: foundWords } = useGame();\n  const { words: allWords } = useWords();\n  const [mode, setMode] = useState<'all' | 'remaining' | 'found'>('remaining');\n\n  const gridWords = useMemo(() => {\n    if (mode === 'all') {\n      return allWords;\n    }\n\n    if (mode === 'found') {\n      return foundWords;\n    }\n\n    const foundLookup: Record<string, true> = foundWords.reduce(\n      (acc, word) => ({ ...acc, [word]: true }),\n      {}\n    );\n\n    return allWords.filter((word) => !foundLookup[word]);\n  }, [mode, allWords, foundWords]);\n\n  const range: [number, number] = allWords.reduce(\n    ([min, max], word) => {\n      return [Math.min(min, word.length), Math.max(max, word.length)];\n    },\n    [1000, 3]\n  );\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.header}>\n        <button\n          onClick={() => setMode('found')}\n          className={cls(\n            classes.mode,\n            classes.found,\n            mode === 'found' && classes.active\n          )}\n        >\n          Funnet\n        </button>\n        <button\n          onClick={() => setMode('remaining')}\n          className={cls(\n            classes.mode,\n            classes.remaining,\n            mode === 'remaining' && classes.active\n          )}\n        >\n          Gjenstår\n        </button>\n        <button\n          onClick={() => setMode('all')}\n          className={cls(\n            classes.mode,\n            classes.all,\n            mode === 'all' && classes.active\n          )}\n        >\n          Alt\n        </button>\n        <GridInfo />\n      </div>\n      <WordGrid range={range} words={gridWords} />\n    </div>\n  );\n};\n\nexport default Grid;\n","import classes from './IconSidebar.module.css';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst IconSidebar = ({ children }: Props) => {\n  return <div className={classes.stack}>{children}</div>;\n};\n\nexport default IconSidebar;\n","import { useWords } from 'WordProvider';\nimport { useGame, useScore } from '../../hooks';\nimport classes from './Progress.module.css';\nimport { MdHelpOutline as Help } from 'react-icons/md';\nimport { useMemo, useState } from 'react';\nimport Modal from 'Modal';\nimport IconSidebar from '../IconSidebar';\n\nconst Progress = () => {\n  const { found } = useGame();\n  const { words } = useWords();\n\n  const { score: currentPoints } = useScore(found);\n  const { score: totalPoints } = useScore(words);\n\n  const [showing, setShowing] = useState(false);\n\n  const modal = useMemo(() => {\n    if (!showing) {\n      return null;\n    }\n\n    return (\n      <Modal title=\"Poeng\" onClose={() => setShowing(false)}>\n        <p>\n          Poengene beregnes ut fra hvor mange ord som blir funnet. Hvert ord har\n          ulike poengsummer.\n        </p>\n        <ul>\n          <li>\n            ord på fire bokstaver er verdt <strong>ett poeng</strong>\n          </li>\n          <li>\n            hver bokstave etter fire er verdt <strong>ett ekstra poeng</strong>\n          </li>\n          <li>\n            ord som bruker alle bokstavenve minst en gang (et pangram) gir{' '}\n            <strong>syv ekstra poeng</strong>\n          </li>\n        </ul>\n        <h3>Eksempel</h3>\n        <p>\n          H&nbsp;I&nbsp;K&nbsp;L&nbsp;O&nbsp;S&nbsp;<strong>T</strong>\n        </p>\n        <ul>\n          <li>\n            <strong>hist</strong> er 4 poeng\n          </li>\n          <li>\n            <strong>hittil</strong> er 6 poeng\n          </li>\n          <li>\n            <strong>holistisk</strong> er (9 + 7) = 16 poeng\n          </li>\n        </ul>\n      </Modal>\n    );\n  }, [showing]);\n\n  const percent = (100 * currentPoints) / totalPoints;\n  const genius = percent >= 70;\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.bars}>\n        <span className={classes.currentPoints}>{currentPoints}</span>\n        <div\n          className={[classes.progressBarContainer, genius && classes.genius]\n            .filter(Boolean)\n            .join(' ')}\n          title={`${currentPoints} av ${totalPoints} poeng`}\n          id=\"points-progress\"\n        >\n          <div\n            className={classes.progress}\n            style={{\n              width: `${percent.toFixed(2)}%`,\n            }}\n          />\n        </div>\n        <span className={classes.totalPoints}>{totalPoints}</span>\n      </div>\n      <IconSidebar>\n        <button\n          onClick={() => setShowing(true)}\n          className={classes.help}\n          aria-label=\"poeng hjelp\"\n        >\n          <Help />\n        </button>\n      </IconSidebar>\n      {modal}\n    </div>\n  );\n};\n\nexport default Progress;\n","import classes from './WordsInfo.module.css';\nimport { useMemo, useState } from 'react';\nimport { MdHelpOutline as HelpIcon } from 'react-icons/md';\nimport Modal from 'Modal';\n\nconst WordsInfo = () => {\n  const [showing, setShowing] = useState(false);\n\n  const modal = useMemo(() => {\n    if (!showing) {\n      return false;\n    }\n    return (\n      <Modal title=\"«Hva er disse ordene?»\" onClose={() => setShowing(false)}>\n        <p>\n          Ordene som brukes her kommer fra den{' '}\n          <a\n            href=\"https://www.nb.no/sprakbanken/ressurskatalog/oai-nb-no-sbr-5/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Norsk ordbank\n          </a>\n          . Alle ordene stemmer, men noen ord blir sjelden (eller aldri) sett i\n          det virkelige liv.\n        </p>\n        <p>\n          <a\n            href=\"mailto:evancharlton+humle@gmail.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Skriv en e-post\n          </a>{' '}\n          hvis du finner et galt ord 😀\n        </p>\n      </Modal>\n    );\n  }, [showing]);\n\n  return (\n    <>\n      <button\n        onClick={() => setShowing(true)}\n        className={classes.button}\n        aria-label=\"funnet ord hjelp\"\n      >\n        <HelpIcon />\n      </button>\n      {modal}\n    </>\n  );\n};\n\nexport default WordsInfo;\n","import { useLetters } from 'LettersProvider';\n\nimport { useCallback, useEffect, useState } from 'react';\n\nexport const useRevealed = () => {\n  const { centerLetter, outerLetters } = useLetters();\n  const key = [\n    'nb-no', // Multi-lingual .. some day\n    'revealed',\n    [centerLetter, ...outerLetters].join(''),\n  ].join('/');\n\n  const [revealed, setLocalRevealed] = useState(false);\n\n  useEffect(() => {\n    const when = localStorage.getItem(key);\n    setLocalRevealed(!!when);\n  }, [key, setLocalRevealed]);\n\n  const revealAnswers = useCallback(() => {\n    localStorage.setItem(key, new Date().toISOString());\n    window.dispatchEvent(new CustomEvent('revealed', { detail: key }));\n  }, [key]);\n\n  const onRevealed = useCallback(\n    (e: Event) => {\n      const { detail } = e as CustomEvent<string>;\n      if (detail !== key) {\n        return;\n      }\n      setLocalRevealed(true);\n    },\n    [key, setLocalRevealed]\n  );\n\n  useEffect(() => {\n    window.addEventListener('revealed', onRevealed);\n    return () => {\n      window.removeEventListener('revealed', onRevealed);\n    };\n  }, [onRevealed]);\n\n  return { revealed, revealAnswers };\n};\n","import { useGame } from 'Hive/hooks';\nimport Modal from 'Modal';\nimport { useMemo, useState } from 'react';\nimport { MdCheck as Reveal } from 'react-icons/md';\nimport { useWords } from 'WordProvider';\nimport { useRevealed } from '../../../useRevealed';\nimport classes from './RevealButton.module.css';\n\nconst RevealButton = () => {\n  const { revealed, revealAnswers } = useRevealed();\n  const [prompting, setPrompting] = useState(false);\n  const { found: foundWords } = useGame();\n  const { words: allWords } = useWords();\n\n  const remaining = allWords.length - foundWords.length;\n  const modal = useMemo(() => {\n    if (!prompting) {\n      return null;\n    }\n    return (\n      <Modal title=\"Er du ferdig?\" onClose={() => setPrompting(false)}>\n        <h2>Avdekke alle ordene?</h2>\n        <p>\n          Når du er ferdig, du kan vise alle ordene. Du har {remaining} ord\n          gjenstår!\n        </p>\n        <div className={classes.revealContainer}>\n          <button\n            onClick={() => {\n              revealAnswers();\n              setPrompting(false);\n            }}\n          >\n            Jeg er ferdig!\n          </button>\n        </div>\n        <p>\n          Hvis du vil forsett å søke, klikk på <strong>«Lukk»</strong> nedenfor.\n        </p>\n      </Modal>\n    );\n  }, [prompting, setPrompting, remaining, revealAnswers]);\n\n  return (\n    <>\n      <button\n        className={classes.reveal}\n        disabled={revealed}\n        onClick={() => setPrompting(true)}\n      >\n        <Reveal />\n      </button>\n      {modal}\n    </>\n  );\n};\n\nexport default RevealButton;\n","import { useLetters } from 'LettersProvider';\nimport { useCallback, useState } from 'react';\n\nconst getSavedWords = (key: string) => {\n  try {\n    const item = localStorage.getItem(key);\n    if (item) {\n      const saved = JSON.parse(item);\n      if (Array.isArray(saved)) {\n        return saved.filter((word) => typeof word === 'string');\n      }\n    }\n  } catch (ex) {\n    // Do nothing\n  }\n  return [];\n};\n\nexport const useFoundWords = () => {\n  const { centerLetter, outerLetters } = useLetters();\n\n  const key = [\n    'nb-no', // Just preparing for a multi-lingual setup\n    'saved',\n    [centerLetter, ...outerLetters].join(''),\n  ].join('/');\n\n  const [found, setStateFound] = useState<string[]>(() => getSavedWords(key));\n\n  const addFoundWord = useCallback(\n    (newWord) => {\n      setStateFound((existing) => {\n        const newWords = [...existing, newWord].sort();\n        localStorage.setItem(key, JSON.stringify(newWords));\n        return newWords;\n      });\n    },\n    [setStateFound, key]\n  );\n\n  return {\n    found,\n    addFoundWord,\n    foundSet: new Set(found),\n  };\n};\n","import { useFoundWords } from 'Hive/useFoundWords';\nimport isPangram from 'isPangram';\nimport classes from './Word.module.css';\n\ntype Props = {\n  children: string;\n};\n\nconst blurLink = (e: React.MouseEvent<HTMLElement>) => e.currentTarget.blur();\n\nconst Word = ({ children: word }: Props) => {\n  const { foundSet } = useFoundWords();\n\n  const revealed = !foundSet.has(word);\n  const pangram = isPangram(word);\n\n  return (\n    <a\n      className={[\n        classes.word,\n        revealed && classes.revealed,\n        pangram && classes.pangram,\n      ]\n        .filter(Boolean)\n        .join(' ')}\n      key={word}\n      href={`https://naob.no/s%C3%B8k/${encodeURIComponent(word)}`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      onClick={blurLink}\n    >\n      {word}\n    </a>\n  );\n};\n\nexport default Word;\n","import { useMemo } from 'react';\nimport { useGame } from '../../hooks';\nimport classes from './WordList.module.css';\nimport WordsInfo from './WordsInfo';\nimport RevealButton from './RevealButton';\nimport Word from './Word';\nimport { useRevealed } from 'Hive/useRevealed';\nimport { useWords } from 'WordProvider';\nimport IconSidebar from '../IconSidebar';\n\nconst WordList = () => {\n  const { revealed } = useRevealed();\n  const { words } = useWords();\n  const { found: foundWords } = useGame();\n\n  const cleaned = useMemo(() => {\n    return (revealed ? words : foundWords).map((word) => (\n      <Word key={word}>{word}</Word>\n    ));\n  }, [foundWords, revealed, words]);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.wordList}>{cleaned}</div>\n      <IconSidebar>\n        <WordsInfo />\n        <RevealButton />\n        <h3\n          className={classes.count}\n          title={`Du har funnet ${foundWords.length} ord`}\n        >\n          {foundWords.length}\n        </h3>\n      </IconSidebar>\n    </div>\n  );\n};\n\nexport default WordList;\n","import Grid from './Grid';\nimport Progress from './Progress';\nimport WordList from './WordList';\nimport classes from './Sidebar.module.css';\n\nconst Sidebar = () => {\n  return (\n    <div className={classes.column}>\n      <div className={classes.header}>\n        <Progress />\n      </div>\n      <WordList />\n      <div className={classes.footer}>\n        <Grid />\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","const shuffle = (original: string[]) =>\n  original\n    .map((a) => ({ sort: Math.random(), value: a }))\n    .sort((a, b) => a.sort - b.sort)\n    .map((a) => a.value);\n\nexport default shuffle;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useLetters } from 'LettersProvider';\nimport shuffle from 'shuffle';\n\nconst useShuffledLetters = () => {\n  const { outerLetters } = useLetters();\n  const [shuffled, setShuffled] = useState<string[]>([]);\n\n  const shuffleLetters = useCallback(() => {\n    setShuffled(shuffle(outerLetters));\n  }, [outerLetters]);\n\n  useEffect(() => {\n    setShuffled(shuffle(outerLetters));\n  }, [outerLetters, setShuffled]);\n\n  return {\n    shuffled,\n    reshuffle: shuffleLetters,\n  };\n};\n\nexport default useShuffledLetters;\n","import {\n  MdKeyboardBackspace as Backspace,\n  MdRefresh as Shuffle,\n  MdKeyboardReturn as Enter,\n} from 'react-icons/md';\nimport classes from './Buttons.module.css';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useLetters } from 'LettersProvider';\nimport { useGame } from '../hooks';\nimport useShuffledLetters from './useShuffledLetters';\nimport { useRevealed } from 'Hive/useRevealed';\n\nconst Buttons = () => {\n  const { onGuess } = useGame();\n\n  const { all, centerLetter, outerLetters } = useLetters();\n  const [guess, setGuess] = useState('');\n  const { shuffled, reshuffle } = useShuffledLetters();\n  const { revealed } = useRevealed();\n\n  const guessRef = useRef('');\n  guessRef.current = guess;\n\n  useEffect(() => {\n    guessRef.current = '';\n    setGuess('');\n  }, [outerLetters, centerLetter]);\n\n  const makeGuess = useCallback(() => {\n    onGuess(guessRef.current);\n    setGuess('');\n  }, [onGuess, guessRef]);\n\n  const onLetterClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      const button = event.currentTarget;\n      const letter = button.getAttribute('data-letter');\n      setGuess((g) => `${g}${letter}`);\n    },\n    [setGuess]\n  );\n\n  const onBackspace = useCallback(() => {\n    setGuess((g) => g.substr(0, g.length - 1));\n  }, [setGuess]);\n\n  const onKeyPress = useCallback(\n    (e: KeyboardEvent) => {\n      const { key } = e;\n\n      if (revealed) {\n        return;\n      }\n\n      if (key === 'Backspace') {\n        setGuess((g) => g.substring(0, g.length - 1));\n        return;\n      }\n\n      if (key === ' ') {\n        reshuffle();\n        e.preventDefault();\n        return;\n      }\n\n      if (key === 'Enter') {\n        makeGuess();\n      }\n\n      if (!all.includes(key.toLocaleLowerCase())) {\n        return;\n      }\n\n      setGuess((g) => `${g}${key}`);\n    },\n    [all, makeGuess, reshuffle, revealed]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', onKeyPress);\n    return () => {\n      document.removeEventListener('keydown', onKeyPress);\n    };\n  }, [onKeyPress]);\n\n  type LetterButtonProps = { letter: string } & JSX.IntrinsicElements['button'];\n\n  const LetterButton = ({ letter, className, ...rest }: LetterButtonProps) => {\n    return (\n      <button\n        data-letter={letter}\n        onClick={onLetterClick}\n        className={[classes.letterButton, className].filter(Boolean).join(' ')}\n        {...rest}\n        disabled={revealed}\n      >\n        {letter}\n      </button>\n    );\n  };\n\n  const CenterLetterButton = (props: LetterButtonProps) => (\n    <LetterButton {...props} className={classes.centerLetter} />\n  );\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.guess}>{guess || <>&nbsp;</>}</div>\n      <div className={classes.letterButtons}>\n        <div className={classes.topRow}>\n          <LetterButton letter={shuffled[0]} />\n          <LetterButton letter={shuffled[1]} />\n        </div>\n        <div className={classes.middleRow}>\n          <LetterButton letter={shuffled[2]} />\n          <CenterLetterButton letter={centerLetter} />\n          <LetterButton letter={shuffled[3]} />\n        </div>\n        <div className={classes.bottomRow}>\n          <LetterButton letter={shuffled[4]} />\n          <LetterButton letter={shuffled[5]} />\n        </div>\n      </div>\n      <div className={classes.controls}>\n        <button disabled={revealed} onClick={onBackspace} aria-label=\"baksiden\">\n          <Backspace />\n        </button>\n        <button\n          disabled={revealed}\n          onClick={reshuffle}\n          aria-label=\"tilfeldig rekkefølge\"\n        >\n          <Shuffle />\n        </button>\n        <button disabled={revealed} onClick={makeGuess} aria-label=\"sende inn\">\n          <Enter />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Buttons;\n","export default __webpack_public_path__ + \"static/media/Humle.d54d42c1.svg\";","import { CSSProperties } from 'react';\nimport SVG from './Humle.svg';\n\ntype Props = {\n  size?: number;\n  style?: CSSProperties;\n};\n\nconst Icon = ({ size, style = {} }: Props) => {\n  return (\n    <img\n      src={SVG}\n      width={size}\n      height={size}\n      style={{ margin: 0, padding: 0, ...style }}\n      alt=\"Staver humle ikon\"\n    />\n  );\n};\n\nexport default Icon;\n","import { useMemo, useState } from 'react';\nimport { MdInfoOutline as InfoIcon } from 'react-icons/md';\nimport headerClasses from '../HeaderButton.module.css';\nimport classes from './InfoButton.module.css';\nimport Modal from 'Modal';\nimport Icon from 'Humle';\n\nconst LAST_CLOSED_DATE = 'info-dialog/has-closed';\n\nconst InfoButton = () => {\n  const [showing, setShowing] = useState(() => {\n    return !localStorage.getItem(LAST_CLOSED_DATE);\n  });\n\n  const modal = useMemo(() => {\n    if (!showing) {\n      return null;\n    }\n\n    return (\n      <Modal\n        title=\"Staver Humle!\"\n        onClose={() => {\n          setShowing(false);\n          localStorage.setItem(LAST_CLOSED_DATE, new Date().toISOString());\n        }}\n      >\n        <p>\n          Staver Humle er et ordspill hvor du lage så mange ord som du kan.\n          Hvert puslespill har syv ulike bokstaver&mdash;en fast i midten og\n          seks rundt.\n        </p>\n        <h3>Reglene</h3>\n        <p>Hvert ord:</p>\n        <ul>\n          <li>\n            <strong>må bruke</strong> den midterste bokstaven\n          </li>\n          <li>\n            være minst <strong>fire bokstaver</strong> lange\n          </li>\n          <li>\n            bruker <strong>bare</strong> de syv bokstavene\n            <br />\n            (men bokstaver kan gjentas)\n          </li>\n        </ul>\n        <p>\n          Hver puslespill har <strong>minst ett</strong> ord som bruker{' '}\n          <strong>alle bokstavene</strong>.\n        </p>\n        <p>\n          Det er en ny puslespill <strong>hver dag!</strong>\n        </p>\n        <p>Lykke til!</p>\n        <hr />\n        <p>\n          <Icon size={20} /> fra{' '}\n          <a\n            href=\"https://linkedin.com/in/baharshahriari/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Bahar Anvari\n          </a>\n        </p>\n        <p>\n          (Want to play in English? Try the{' '}\n          <a\n            href=\"https://www.nytimes.com/puzzles/spelling-bee\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            NYT Spelling Bee\n          </a>\n          !)\n        </p>\n      </Modal>\n    );\n  }, [showing]);\n\n  return (\n    <>\n      <button\n        onClick={() => setShowing(true)}\n        className={[headerClasses.button, classes.button]\n          .filter(Boolean)\n          .join(' ')}\n        aria-label=\"om Staver humle\"\n      >\n        <InfoIcon />\n      </button>\n      {modal}\n    </>\n  );\n};\n\nexport default InfoButton;\n","import { useMemo, useState } from 'react';\nimport classes from './DatePicker.module.css';\nimport {\n  BsChevronDoubleLeft as BackYear,\n  BsChevronDoubleRight as ForwardYear,\n  BsChevronLeft as BackMonth,\n  BsChevronRight as ForwardMonth,\n} from 'react-icons/bs';\nimport { isProbablyDate } from 'hooks';\nimport twoDigits from 'twoDigits';\n\nexport type Props = {\n  gameId?: string;\n  onChange: (gameId: string) => void;\n};\n\nconst MONTHS = [\n  'januar',\n  'februar',\n  'mars',\n  'april',\n  'mai',\n  'juni',\n  'juli',\n  'august',\n  'september',\n  'oktober',\n  'november',\n  'desember',\n];\n\nconst DAYS = [\n  'm', // mandag\n  't', // tirsdag\n  'o', // onsdag\n  't', // torsdag\n  'f', // fredag\n  'l', // lørdag\n  's', // sondag\n];\n\nconst DAY_KEYS = [\n  'mandag',\n  'tirsdag',\n  'onsdag',\n  'torsdag',\n  'fredag',\n  'lørdag',\n  'sondag',\n];\n\nconst today = new Date();\n\nconst DatePicker = ({ onChange, gameId = '' }: Props) => {\n  const currentGameDate = useMemo(() => {\n    return isProbablyDate(gameId) ? new Date(gameId) : null;\n  }, [gameId]);\n\n  const [year, setYear] = useState((currentGameDate || today).getFullYear());\n  const [month, setMonth] = useState((currentGameDate || today).getMonth());\n\n  const changeYear = (delta: 1 | -1) => () => {\n    setYear((y) => y + delta);\n  };\n\n  const changeMonth = (delta: 1 | -1) => () => {\n    setMonth((m) => {\n      const added = m + delta;\n      if (added < 0) {\n        setYear((y) => y - 1);\n        return 11;\n      }\n      if (added >= 12) {\n        setYear((y) => y + 1);\n        return 0;\n      }\n      return added;\n    });\n  };\n\n  const monthGrid = useMemo(() => {\n    const start = new Date(year, month, 1);\n    const dayOfWeek = start.getDay();\n\n    const cells = [];\n    for (let i = 0; i < 7; i += 1) {\n      cells.push(\n        <div className={classes.dayHeader} key={`day-${DAY_KEYS[i]}`}>\n          {DAYS[i]}\n        </div>\n      );\n    }\n\n    for (let i = 1; i < dayOfWeek; i += 1) {\n      cells.push(\n        <div key={`filler-${i}`} className={classes.filler}>\n          &nbsp;\n        </div>\n      );\n    }\n\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    for (let i = 1; i <= daysInMonth; i += 1) {\n      const isToday =\n        year === today.getFullYear() &&\n        month === today.getMonth() &&\n        i === today.getDate();\n\n      const isCurrent =\n        currentGameDate &&\n        year === currentGameDate.getFullYear() &&\n        month === currentGameDate.getMonth() &&\n        i === currentGameDate.getDate();\n\n      const classNames = [classes.dateButton];\n      if (isToday) {\n        classNames.push(classes.todayButton);\n      }\n      if (isCurrent) {\n        classNames.push(classes.currentButton);\n      }\n\n      const ariaLabel = `velg ${year}-${month}-${i}`;\n\n      cells.push(\n        <button\n          key={`date-${i}`}\n          className={classNames.join(' ')}\n          onClick={() => {\n            onChange(`${year}-${twoDigits(month + 1)}-${twoDigits(i)}`);\n          }}\n          aria-label={ariaLabel}\n        >\n          {i}\n        </button>\n      );\n    }\n\n    return <div className={classes.monthGrid}>{cells}</div>;\n  }, [year, month, onChange, currentGameDate]);\n\n  return (\n    <div>\n      <div className={classes.header}>\n        <button onClick={changeYear(-1)} aria-label=\"tilbake ett år\">\n          <BackYear />\n        </button>\n        <button onClick={changeMonth(-1)} aria-label=\"tilbake en måned\">\n          <BackMonth />\n        </button>\n        <button\n          className={classes.center}\n          onClick={() => {\n            const now = new Date();\n            setYear(now.getFullYear());\n            setMonth(now.getMonth());\n          }}\n        >\n          <span className={classes.year}>{year}</span>\n          &nbsp;/&nbsp;\n          <span className={classes.month}>{MONTHS[month]}</span>\n        </button>\n        <button onClick={changeMonth(1)} aria-label=\"frem en måned\">\n          <ForwardMonth />\n        </button>\n        <button onClick={changeYear(1)} aria-label=\"frem ett år\">\n          <ForwardYear />\n        </button>\n      </div>\n      {monthGrid}\n    </div>\n  );\n};\n\nexport default DatePicker;\n","import { useCallback, useMemo, useState } from 'react';\nimport { MdToday as CalendarIcon } from 'react-icons/md';\nimport { useHistory } from 'react-router-dom';\nimport Modal from 'Modal';\nimport headerClasses from '../HeaderButton.module.css';\nimport classes from './CalendarButton.module.css';\nimport DatePicker from './DatePicker';\nimport { useGameId } from 'hooks';\n\nconst CalendarButton = () => {\n  const history = useHistory();\n  const [showing, setShowing] = useState(false);\n  const { gameId } = useGameId();\n\n  const onClose = useCallback(() => {\n    setShowing(false);\n  }, [setShowing]);\n\n  const onNewDatePicked = useCallback(\n    (gameId: string) => {\n      onClose();\n      history.push(`/${gameId}`);\n    },\n    [onClose, history]\n  );\n\n  const modal = useMemo(() => {\n    if (!showing) {\n      return null;\n    }\n    return (\n      <Modal title=\"Dato\" onClose={() => setShowing(false)}>\n        <DatePicker onChange={onNewDatePicked} gameId={gameId} />\n      </Modal>\n    );\n  }, [showing, setShowing, onNewDatePicked, gameId]);\n\n  return (\n    <>\n      <button\n        onClick={() => setShowing(true)}\n        className={[headerClasses.button, classes.button]\n          .filter(Boolean)\n          .join(' ')}\n        aria-label=\"velg en annen dato\"\n      >\n        <CalendarIcon />\n      </button>\n      {modal}\n    </>\n  );\n};\n\nexport default CalendarButton;\n","import { Link } from 'react-router-dom';\nimport InfoButton from './InfoButton';\nimport CalendarButton from './CalendarButton';\nimport classes from './Header.module.css';\nimport Icon from 'Humle';\n\nconst Header = () => {\n  return (\n    <div className={classes.header}>\n      <h1>\n        <Link to=\"/\">Staver humle</Link>\n        <Icon />\n      </h1>\n      <CalendarButton />\n      <InfoButton />\n    </div>\n  );\n};\n\nexport default Header;\n","import { BadGuess } from '../Hive';\n\ntype Props = { reason: BadGuess };\n\nconst ErrorMessage = ({ reason }: Props) => {\n  let msg = '';\n  switch (reason) {\n    case 'already-found':\n      msg = 'ordet har blitt allerede funnet';\n      break;\n    case 'invalid-letters':\n      msg = 'bruker ugyldige bokstaver';\n      break;\n    case 'missing-center':\n      msg = 'mangler obligatorisk bokstaven';\n      break;\n    case 'too-short':\n      msg = 'for kort';\n      break;\n    case 'unknown-word':\n      msg = 'ukjent ord';\n      break;\n    default:\n      return null;\n  }\n\n  return <span>{msg}</span>;\n};\n\nexport default ErrorMessage;\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ErrorMessage from './ErrorMessage';\nimport { BadGuess } from '../Hive';\nimport classes from './Messages.module.css';\n\nconst Messages = () => {\n  const [displayedMessage, setDisplayedMessage] = useState<\n    BadGuess | 'pangram'\n  >();\n  const timerIdRef = useRef<NodeJS.Timeout | null>();\n\n  const showMessage = useCallback(\n    (msg: BadGuess | 'pangram') => {\n      setDisplayedMessage(msg);\n      if (timerIdRef.current) {\n        clearTimeout(timerIdRef.current);\n      }\n      timerIdRef.current = setTimeout(() => {\n        setDisplayedMessage(undefined);\n        timerIdRef.current = null;\n      }, 2500);\n    },\n    [timerIdRef, setDisplayedMessage]\n  );\n\n  const onBadGuess = useCallback(\n    (e) => {\n      const badGuess = (e as CustomEvent<string>).detail as BadGuess;\n      showMessage(badGuess);\n    },\n    [showMessage]\n  );\n\n  const onPangram = useCallback(() => {\n    showMessage('pangram');\n  }, [showMessage]);\n\n  useEffect(() => {\n    window.addEventListener('bad-guess', onBadGuess);\n    window.addEventListener('pangram', onPangram);\n    return () => {\n      window.removeEventListener('bad-guess', onBadGuess);\n      window.removeEventListener('pangram', onPangram);\n    };\n  }, [onBadGuess, onPangram]);\n\n  const message = useMemo(() => {\n    if (!displayedMessage) {\n      return null;\n    }\n\n    if (displayedMessage === 'pangram') {\n      return <span className={classes.pangram}>Pangram!</span>;\n    }\n\n    return <ErrorMessage reason={displayedMessage} />;\n  }, [displayedMessage]);\n\n  return <div className={classes.container}>{message}</div>;\n};\n\nexport default Messages;\n","import { createContext, useCallback } from 'react';\nimport { useLetters } from '../LettersProvider';\nimport { useWords } from '../WordProvider';\nimport Sidebar from './Sidebar';\nimport Buttons from './Buttons';\nimport Header from './Header';\nimport Messages from './Messages';\nimport classes from './Hive.module.css';\nimport { useFoundWords } from './useFoundWords';\nimport isPangram from '../isPangram';\n\nexport type BadGuess =\n  | 'too-short'\n  | 'missing-center'\n  | 'already-found'\n  | 'unknown-word'\n  | 'invalid-letters';\n\ntype ContextType = {\n  found: string[];\n  onGuess: (guess: string) => void;\n};\n\nexport const Context = createContext<ContextType>({\n  found: [],\n  onGuess: () => undefined,\n});\n\nconst Hive = () => {\n  const { all, centerLetter } = useLetters();\n  const { words } = useWords();\n\n  const { found, addFoundWord } = useFoundWords();\n\n  const makeGuess = useCallback(\n    (input: string) => {\n      if (!input) {\n        // No error message for this.\n        return;\n      }\n\n      const word = input\n        .toLocaleLowerCase()\n        .split('')\n        .filter((letter) => all.includes(letter))\n        .join('');\n\n      if (word.length !== input.length) {\n        dispatchEvent(\n          new CustomEvent('bad-guess', { detail: 'invalid-letters' })\n        );\n        return;\n      }\n\n      if (word.length < 4) {\n        dispatchEvent(new CustomEvent('bad-guess', { detail: 'too-short' }));\n        return;\n      }\n\n      if (!word.includes(centerLetter)) {\n        dispatchEvent(\n          new CustomEvent('bad-guess', { detail: 'missing-center' })\n        );\n        return;\n      }\n\n      if (found.includes(word)) {\n        dispatchEvent(\n          new CustomEvent('bad-guess', { detail: 'already-found' })\n        );\n        return;\n      }\n\n      if (!words.includes(word)) {\n        dispatchEvent(new CustomEvent('bad-guess', { detail: 'unknown-word' }));\n        return;\n      }\n\n      addFoundWord(word);\n      if (isPangram(word)) {\n        dispatchEvent(new CustomEvent('pangram'));\n      }\n    },\n    [all, centerLetter, found, words, addFoundWord]\n  );\n\n  return (\n    <Context.Provider value={{ found, onGuess: makeGuess }}>\n      <div className={classes.container}>\n        <Header />\n        <div className={classes.gameContainer}>\n          <div className={classes.buttonsContainer}>\n            <Messages />\n            <Buttons />\n          </div>\n          <Sidebar />\n        </div>\n      </div>\n    </Context.Provider>\n  );\n};\n\nexport default Hive;\n","import WordsProvider from 'WordProvider';\nimport LettersProvider from 'LettersProvider';\nimport Hive from 'Hive';\n\nconst Play = () => {\n  return (\n    <LettersProvider>\n      <WordsProvider>\n        <Hive />\n      </WordsProvider>\n    </LettersProvider>\n  );\n};\n\nexport default Play;\n","import './App.css';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Play from './pages/Play';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Play />\n        </Route>\n\n        <Route path=\"/:gameId\">\n          <Play />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}