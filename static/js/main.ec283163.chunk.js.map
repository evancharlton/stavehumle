{"version":3,"sources":["Hive/Hive.module.css","Hive/Found/Found.module.css","pages/Start/Start.tsx","api.ts","hashcode.ts","LettersProvider/LettersProvider.tsx","hooks.ts","LettersProvider/useLetters.ts","WordProvider/WordsProvider.tsx","WordProvider/useWords.ts","Hive/hooks.ts","Hive/Score/Score.tsx","Hive/Found/Found.tsx","shuffle.ts","Hive/Buttons/Buttons.tsx","Hive/Progress/Progress.tsx","Hive/Hive.tsx","pages/Play/Play.tsx","App.tsx","reportWebVitals.ts","index.tsx","Hive/Buttons/Buttons.module.css"],"names":["module","exports","twoDigits","v","Start","history","useHistory","useEffect","now","Date","replace","getFullYear","getMonth","getDate","map","join","jsonFetch","url","fetch","headers","then","resp","json","hashCode","input","hash","i","length","charCodeAt","Context","createContext","centerLetter","outerLetters","all","LettersProvider","children","gameHash","gameId","useParams","hashcode","useGameId","useState","option","setOption","error","setError","process","options","catch","letters","split","filter","letter","Provider","value","useLetters","useContext","words","GameCreator","setWords","key","substring","obj","loadedWords","word","includes","message","useWords","useScore","score","useMemo","Set","size","reduce","total","wordScore","useGame","Score","found","Found","cleaned","Object","keys","acc","className","classes","wordList","href","encodeURIComponent","target","rel","shuffle","original","a","sort","Math","random","b","Buttons","onGuess","guess","setGuess","shuffledOuterLetters","setShuffledOuterLetters","guessRef","useRef","current","makeGuess","useCallback","onLetterClick","event","currentTarget","getAttribute","g","onShuffle","onBackspace","substr","onKeyPress","e","preventDefault","document","addEventListener","removeEventListener","LetterButton","rest","data-letter","onClick","letterButton","Boolean","CenterLetterButton","props","container","letterButtons","topRow","middleRow","bottomRow","controls","Progress","Hive","setFound","toLocaleLowerCase","list","buttonsContainer","column","Play","WordsProvider","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec283163.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hive_container__1Zjua\",\"buttonsContainer\":\"Hive_buttonsContainer__3BlGP\",\"column\":\"Hive_column__uIVAh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wordList\":\"Found_wordList__kw6ut\"};","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst twoDigits = (v: number) => {\n  if (v < 10) {\n    return `0${v}`;\n  }\n  return v;\n};\n\nconst Start = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    const now = new Date();\n    history.replace(\n      `/${[now.getFullYear(), now.getMonth() + 1, now.getDate()]\n        .map(twoDigits)\n        .join('-')}`\n    );\n  }, [history]);\n\n  return null;\n};\n\nexport default Start;\n","export const jsonFetch = (url: string) =>\n  fetch(url, { headers: { 'Content-Type': 'application/json' } }).then((resp) =>\n    resp.json()\n  );\n","const hashCode = (input: string) => {\n  let hash = 0;\n  for (let i = 0; i < input.length; i += 1) {\n    const char = input.charCodeAt(i);\n    hash = 31 * hash + char;\n  }\n  return hash;\n};\n\nexport default hashCode;\n","import { createContext, useEffect, useState } from 'react';\nimport { jsonFetch } from '../api';\nimport { useGameId } from '../hooks';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype ContextType = {\n  centerLetter: string;\n  outerLetters: [string, string, string, string, string, string];\n  all: string;\n};\n\nexport const Context = createContext<ContextType>({\n  centerLetter: '',\n  outerLetters: ['', '', '', '', '', ''],\n  all: '',\n});\n\nconst LettersProvider = ({ children }: Props) => {\n  const { gameHash } = useGameId();\n  const [option, setOption] = useState('');\n  const [error, setError] = useState<Error | undefined>();\n\n  useEffect(() => {\n    jsonFetch(`${process.env.PUBLIC_URL}/words/options.json`)\n      .then((options) => options[gameHash % options.length])\n      .then(setOption)\n      .catch(setError);\n  }, [gameHash]);\n\n  if (error) {\n    return <div>Error!</div>;\n  }\n\n  if (!option) {\n    return <div>Loading ...</div>;\n  }\n\n  const letters = option.split('');\n  const centerLetter = letters[gameHash % letters.length];\n  const outerLetters = letters.filter(\n    (letter) => letter !== centerLetter\n  ) as ContextType['outerLetters'];\n\n  return (\n    <Context.Provider value={{ centerLetter, outerLetters, all: option }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport default LettersProvider;\n","import { useParams } from 'react-router-dom';\nimport hashcode from './hashcode';\n\nexport const useGameId = () => {\n  const { gameId } = useParams<{ gameId: string }>();\n  return { gameId, gameHash: hashcode(gameId) };\n};\n","import { useContext } from 'react';\nimport { Context } from './LettersProvider';\n\nexport const useLetters = () => {\n  return useContext(Context);\n};\n","import { createContext, useEffect, useState } from 'react';\nimport { jsonFetch } from '../api';\nimport { useLetters } from '../LettersProvider';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype ContextType = {\n  words: string[];\n};\n\nexport const Context = createContext<ContextType>({\n  words: [],\n});\n\nconst GameCreator = ({ children }: Props) => {\n  const { all, centerLetter } = useLetters();\n\n  const [words, setWords] = useState<string[]>([]);\n  const [error, setError] = useState<Error | undefined>();\n\n  useEffect(() => {\n    const key = all.substring(0, 3);\n    const url = `${process.env.PUBLIC_URL}/words/${key}.json`;\n    jsonFetch(url)\n      .then((obj) => obj[all])\n      .then((loadedWords) =>\n        loadedWords.filter((word: string) => word.includes(centerLetter))\n      )\n      .then(setWords)\n      .catch(setError);\n  }, [all, centerLetter]);\n\n  if (error) {\n    return <pre>{error.message}</pre>;\n  }\n\n  if (words.length === 0) {\n    return <div>Loading ...</div>;\n  }\n\n  return <Context.Provider value={{ words }}>{children}</Context.Provider>;\n};\n\nexport default GameCreator;\n","import { useContext } from 'react';\nimport { Context } from './WordsProvider';\n\nexport const useWords = () => {\n  return useContext(Context);\n};\n","import { useContext, useMemo } from 'react';\nimport { Context } from './Hive';\n\nexport const useScore = (words: string[]) => {\n  const score = useMemo(() => {\n    return words\n      .map((word) => {\n        if (word.length === 4) {\n          return 1;\n        }\n\n        if (word.length < 7) {\n          return word.length;\n        }\n\n        const letters = new Set(word.split(''));\n        return (letters.size === 7 ? 7 : 0) + word.length;\n      })\n      .reduce((total, wordScore) => total + wordScore, 0);\n  }, [words]);\n\n  return { score };\n};\n\nexport const useGame = () => {\n  return useContext(Context);\n};\n","import { useWords } from '../../WordProvider';\nimport { useGame, useScore } from '../hooks';\n\nconst Score = () => {\n  const { found } = useGame();\n  const { words } = useWords();\n\n  const { score } = useScore(found);\n  const { score: total } = useScore(words);\n  return (\n    <h1>\n      {score} / {total}\n    </h1>\n  );\n};\n\nexport default Score;\n","import { useMemo } from 'react';\nimport { useGame } from '../hooks';\nimport classes from './Found.module.css';\n\nconst Found = () => {\n  const { found: words } = useGame();\n  const cleaned = useMemo(() => {\n    const foo = Object.keys(\n      words.reduce((acc, word) => ({ ...acc, [word]: true }), {})\n    );\n    return foo;\n  }, [words]);\n  return (\n    <ul className={classes.wordList}>\n      {cleaned.map((word) => (\n        <li key={word}>\n          <a\n            href={`https://naob.no/s%C3%B8k/${encodeURIComponent(word)}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {word}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Found;\n","const shuffle = (original: string[]) =>\n  original\n    .map((a) => ({ sort: Math.random(), value: a }))\n    .sort((a, b) => a.sort - b.sort)\n    .map((a) => a.value);\n\nexport default shuffle;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { MdBackspace, MdRefresh, MdKeyboardReturn } from 'react-icons/md';\nimport { useLetters } from '../../LettersProvider';\nimport shuffle from '../../shuffle';\nimport { useGame } from '../hooks';\nimport classes from './Buttons.module.css';\n\nconst Buttons = () => {\n  const { onGuess } = useGame();\n\n  const { all, centerLetter, outerLetters } = useLetters();\n  const [guess, setGuess] = useState('');\n  const [shuffledOuterLetters, setShuffledOuterLetters] = useState(() =>\n    shuffle(outerLetters)\n  );\n  const guessRef = useRef('');\n  guessRef.current = guess;\n\n  const makeGuess = useCallback(() => {\n    onGuess(guessRef.current);\n    setGuess('');\n  }, [onGuess, guessRef]);\n\n  const onLetterClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      const button = event.currentTarget;\n      const letter = button.getAttribute('data-letter');\n      setGuess((g) => `${g}${letter}`);\n    },\n    [setGuess]\n  );\n\n  const onShuffle = useCallback(() => {\n    setShuffledOuterLetters(shuffle(outerLetters) as typeof outerLetters);\n  }, [setShuffledOuterLetters, outerLetters]);\n\n  const onBackspace = useCallback(() => {\n    setGuess((g) => g.substr(0, g.length - 1));\n  }, [setGuess]);\n\n  const onKeyPress = useCallback(\n    (e: KeyboardEvent) => {\n      const { key } = e;\n\n      if (key === 'Backspace') {\n        setGuess((g) => g.substring(0, g.length - 1));\n        return;\n      }\n\n      if (key === ' ') {\n        onShuffle();\n        e.preventDefault();\n        return;\n      }\n\n      if (key === 'Enter') {\n        makeGuess();\n      }\n\n      if (!all.includes(key)) {\n        return;\n      }\n\n      setGuess((g) => `${g}${key}`);\n    },\n    [all, makeGuess, onShuffle]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', onKeyPress);\n    return () => {\n      document.removeEventListener('keydown', onKeyPress);\n    };\n  }, [onKeyPress]);\n\n  type LetterButtonProps = { letter: string } & JSX.IntrinsicElements['button'];\n\n  const LetterButton = ({ letter, className, ...rest }: LetterButtonProps) => {\n    return (\n      <button\n        data-letter={letter}\n        onClick={onLetterClick}\n        className={[classes.letterButton, className].filter(Boolean).join(' ')}\n        {...rest}\n      >\n        {letter}\n      </button>\n    );\n  };\n\n  const CenterLetterButton = (props: LetterButtonProps) => (\n    <LetterButton {...props} className={classes.centerLetter} />\n  );\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.guess}>{guess}</div>\n      <div className={classes.letterButtons}>\n        <div className={classes.topRow}>\n          <LetterButton letter={shuffledOuterLetters[0]} />\n          <LetterButton letter={shuffledOuterLetters[1]} />\n        </div>\n        <div className={classes.middleRow}>\n          <LetterButton letter={shuffledOuterLetters[2]} />\n          <CenterLetterButton letter={centerLetter} />\n          <LetterButton letter={shuffledOuterLetters[3]} />\n        </div>\n        <div className={classes.bottomRow}>\n          <LetterButton letter={shuffledOuterLetters[4]} />\n          <LetterButton letter={shuffledOuterLetters[5]} />\n        </div>\n      </div>\n      <div className={classes.controls}>\n        <button onClick={onBackspace}>\n          <MdBackspace />\n        </button>\n        <button onClick={onShuffle}>\n          <MdRefresh />\n        </button>\n        <button onClick={makeGuess}>\n          <MdKeyboardReturn />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import { useWords } from '../../WordProvider';\nimport { useGame } from '../hooks';\n\nconst Progress = () => {\n  const { found } = useGame();\n  const { words } = useWords();\n\n  return (\n    <div>\n      <div>\n        {found.length} / {words.length}\n      </div>\n    </div>\n  );\n};\n\nexport default Progress;\n","import { createContext, useCallback, useState } from 'react';\nimport { useLetters } from '../LettersProvider';\nimport { useWords } from '../WordProvider';\nimport Score from './Score';\nimport Found from './Found';\nimport Buttons from './Buttons';\nimport Progress from './Progress';\nimport classes from './Hive.module.css';\n\ntype ContextType = {\n  found: string[];\n  onGuess: (guess: string) => void;\n};\n\nexport const Context = createContext<ContextType>({\n  found: [],\n  onGuess: () => undefined,\n});\n\nconst Hive = () => {\n  const { all, centerLetter } = useLetters();\n  const { words } = useWords();\n\n  const [found, setFound] = useState<string[]>([]);\n\n  const makeGuess = useCallback(\n    (input: string) => {\n      const word = input\n        .toLocaleLowerCase()\n        .split('')\n        .filter((letter) => all.includes(letter))\n        .join('');\n      if (word.length < 4) {\n        return;\n      }\n\n      if (!word.includes(centerLetter)) {\n        return;\n      }\n\n      if (found.includes(word)) {\n        return;\n      }\n\n      if (words.includes(word)) {\n        setFound((list) => [...list, word].sort());\n      }\n    },\n    [all, centerLetter, found, words]\n  );\n\n  return (\n    <Context.Provider value={{ found, onGuess: makeGuess }}>\n      <div className={classes.container}>\n        <div className={classes.buttonsContainer}>\n          <Buttons />\n        </div>\n        <div className={classes.column}>\n          <Progress />\n          <Score />\n          <Found />\n        </div>\n      </div>\n    </Context.Provider>\n  );\n};\n\nexport default Hive;\n","import WordsProvider from '../../WordProvider';\nimport LettersProvider from '../../LettersProvider';\nimport Hive from '../../Hive';\n\nconst Play = () => {\n  return (\n    <LettersProvider>\n      <WordsProvider>\n        <Hive />\n      </WordsProvider>\n    </LettersProvider>\n  );\n};\n\nexport default Play;\n","import './App.css';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Start from './pages/Start';\nimport Play from './pages/Play';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Start />\n        </Route>\n\n        <Route path=\"/:gameId\">\n          <Play />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Buttons_container__1Zt8k\",\"guess\":\"Buttons_guess__2Anft\",\"letterButton\":\"Buttons_letterButton__1mMw1\",\"centerLetter\":\"Buttons_centerLetter__35133\",\"letterButtons\":\"Buttons_letterButtons__3XtpL\",\"controls\":\"Buttons_controls__vjaFF\"};"],"sourceRoot":""}