{"version":3,"sources":["Hive/Sidebar/Grid/Grid.module.css","Hive/Header/CalendarButton/DatePicker/DatePicker.module.css","Hive/Buttons/Buttons.module.css","Hive/Sidebar/Progress/Progress.module.css","Hive/Header/UserDialog/UserDialog.module.css","Hive/Header/UserDialog/DeleteAccountButton/DeleteAccountButton.module.css","Hive/Header/HeaderButton.module.css","Modal/Modal.module.css","Hive/Header/Header.module.css","Hive/Messages/Messages.module.css","Hive/Hive.module.css","Hive/Sidebar/WordList/WordList.module.css","Hive/Sidebar/WordList/Word/Word.module.css","Loading/Loading.module.css","Hive/Sidebar/WordList/RevealButton/RevealButton.module.css","Hive/Sidebar/Sidebar.module.css","Hive/Sidebar/Grid/GridInfo/GridInfo.module.css","Hive/Sidebar/WordList/WordsInfo/WordsInfo.module.css","useNoBodyScroll.ts","Loading/Loading.tsx","api.ts","hashCode/hashCode.ts","twoDigits.ts","hooks.ts","GameLoader/recoil.tsx","GameLoader/useLetters.ts","GameLoader/usePuzzlePath.ts","sync/firebase-import.ts","sync/useLogin.ts","custom-events.ts","GameLoader/FirebaseSyncer/UploadNewLocalWords.tsx","GameLoader/useWords.ts","GameLoader/FirebaseSyncer/InsertNewRemoteWords.tsx","storage/getSavedWords.ts","GameLoader/FirebaseSyncer/UploadInitialLocalStorage.tsx","GameLoader/FirebaseSyncer/DownloadInitialRemoteWords.tsx","GameLoader/FirebaseSyncer/FirebaseSyncer.tsx","GameLoader/LocalStorageSyncer/LocalStorageSyncer.tsx","GameLoader/GameLoader.tsx","GameLoader/useLoadLetters.ts","GameLoader/useLoadWords.ts","GameLoader/useFoundWords.ts","isPangram.ts","score.ts","Hive/hooks.ts","shuffle.ts","Hive/Buttons/useShuffledLetters.ts","Hive/useRevealed.ts","Hive/Buttons/Buttons.tsx","Modal/Modal.tsx","Humle/Humle.svg","Humle/Humle.tsx","Hive/Header/InfoButton/InfoButton.tsx","Hive/Header/CalendarButton/DatePicker/DatePicker.tsx","Hive/Header/CalendarButton/CalendarButton.tsx","Hive/Header/UserDialog/UserDialog.tsx","Hive/Header/Header.tsx","Hive/Messages/ErrorMessage.tsx","Hive/Messages/Messages.tsx","Hive/Sidebar/Grid/WordGrid/WordGrid.tsx","Hive/Sidebar/Grid/GridInfo/GridInfo.tsx","Hive/Sidebar/Grid/Grid.tsx","Hive/Sidebar/Progress/Progress.tsx","Hive/Sidebar/WordList/WordsInfo/WordsInfo.tsx","Hive/Sidebar/WordList/RevealButton/RevealButton.tsx","Hive/Sidebar/WordList/Word/Word.tsx","Hive/Sidebar/WordList/WordList.tsx","Hive/Sidebar/Sidebar.tsx","Hive/Hive.tsx","pages/Play/Play.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","useNoBodyScroll","useEffect","document","body","classList","add","remove","Loading","className","classes","container","ldsRipple","gzipJsonFetch","url","fetch","headers","then","resp","arrayBuffer","buf","Uint8Array","pako","inflate","TextDecoder","decode","str","JSON","parse","MAX_VALUE","Math","pow","hashCode","input","hash","i","length","charCodeAt","twoDigits","v","useGameId","gameId","useParams","now","Date","getFullYear","getMonth","getDate","map","join","gameHash","split","reverse","gamePuzzleId","atom","key","default","gameLetters","selector","get","puzzleId","centerLetter","outerLetters","all","sort","gameWords","gameFoundWords","useLetters","useRecoilValue","letters","usePuzzlePath","firebase","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useLogin","useState","auth","currentUser","uid","userId","setUserId","onAuthStateChanged","useCallback","user","path","FOUND_WORD","FoundWordEvent","word","when","source","detail","CustomEvent","useNewWordFound","callback","wrapper","e","info","window","addEventListener","removeEventListener","UploadNewLocalWords","children","node","onWordFound","database","ref","update","useWords","words","InsertNewRemoteWords","foundWords","validWords","snap","newWord","dateStr","val","includes","timestamp","undefined","dispatchEvent","console","warn","on","off","getSavedWords","item","localStorage","getItem","saved","Array","isArray","setItem","migrated","filter","reduce","acc","stringify","Object","entries","k","ex","UploadInitialLocalStorage","values","startsWith","keys","DownloadInitialRemoteWords","once","exists","wordMap","newWords","remoteWords","forEach","whenA","FirebaseWatcher","LocalStorageSyncer","setFoundWords","useSetRecoilState","old","next","GameLoader","loadLettersError","error","setError","setPuzzleId","process","options","option","letter","catch","useLoadLetters","loadWordsError","setWords","substring","obj","loadedWords","useLoadWords","FirebaseSyncer","useFoundWords","found","isPangram","Set","size","scoreWord","bonus","useScore","score","useMemo","total","wordScore","useGame","foundWordsMap","onGuess","toLocaleLowerCase","shuffle","original","a","random","value","b","useShuffledLetters","shuffled","setShuffled","shuffleLetters","reshuffle","useRevealed","revealed","setLocalRevealed","revealAnswers","toISOString","onRevealed","Buttons","guess","setGuess","guessRef","useRef","current","makeGuess","onLetterClick","event","currentTarget","getAttribute","g","onBackspace","substr","onKeyPress","preventDefault","LetterButton","rest","data-letter","onClick","letterButton","Boolean","disabled","CenterLetterButton","props","letterButtons","topRow","middleRow","bottomRow","controls","aria-label","Modal","title","onClose","onKeyDown","ReactDOM","createPortal","modalBackground","modal","stopPropagation","header","contents","footer","Icon","style","src","SVG","width","height","margin","padding","alt","LAST_CLOSED_DATE","InfoButton","showing","setShowing","href","target","rel","headerClasses","button","MONTHS","DAYS","DAY_KEYS","DatePicker","onChange","today","todayYear","todayMonth","todayDate","currentGameDate","ymd","match","slice","Number","year","month","day","isProbablyDate","setYear","setMonth","changeYear","delta","y","changeMonth","m","added","monthGrid","dayOfWeek","getDay","cells","push","dayHeader","filler","daysInMonth","isToday","isCurrent","classNames","dateButton","todayButton","currentButton","ariaLabel","center","CalendarButton","history","useHistory","onNewDatePicked","UserDialog","signingIn","setSigningIn","performLogin","provider","signInWithPopup","finally","eraseEverything","set","delete","content","buttons","signOut","logOut","providersContainer","GoogleAuthProvider","GithubAuthProvider","portal","avatarButton","Header","to","left","right","ErrorMessage","msg","reason","Messages","displayedMessage","setDisplayedMessage","timerIdRef","showMessage","clearTimeout","setTimeout","onBadGuess","badGuess","points","message","pangram","isFoundWord","EMPTY","WordGrid","range","shortest","longest","columns","totals","count","matchingWords","border","matchingLength","grid","Info","cls","Grid","allWords","mode","setMode","gridWords","foundLookup","min","max","active","remaining","GridInfo","Progress","currentPoints","totalPoints","percent","genius","bars","progressBarContainer","id","progress","toFixed","help","WordsInfo","RevealButton","prompting","setPrompting","revealContainer","reveal","blurLink","blur","Word","encodeURIComponent","WordList","cleaned","wordList","Sidebar","column","Hive","gameContainer","buttonsContainer","Play","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8139f587.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Grid_container__2Ppj6\",\"grid\":\"Grid_grid__3JKXm\",\"border\":\"Grid_border___HdCe\",\"letter\":\"Grid_letter__1Q4sA\",\"filler\":\"Grid_filler__2neQo\",\"header\":\"Grid_header__mz81U\",\"mode\":\"Grid_mode__iq0BK\",\"active\":\"Grid_active__1OK2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"DatePicker_header__3oWo4\",\"center\":\"DatePicker_center__3IS8k\",\"monthGrid\":\"DatePicker_monthGrid__15JAF\",\"dateButton\":\"DatePicker_dateButton__3t50Y\",\"todayButton\":\"DatePicker_todayButton__USWS_\",\"currentButton\":\"DatePicker_currentButton__3kv-Y\",\"dayHeader\":\"DatePicker_dayHeader__BgL3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Buttons_container__1Zt8k\",\"guess\":\"Buttons_guess__2Anft\",\"letterButton\":\"Buttons_letterButton__1mMw1\",\"centerLetter\":\"Buttons_centerLetter__35133\",\"letterButtons\":\"Buttons_letterButtons__3XtpL\",\"controls\":\"Buttons_controls__vjaFF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Progress_container__2bfaL\",\"bars\":\"Progress_bars__19pOs\",\"progressBarContainer\":\"Progress_progressBarContainer__zq5aQ\",\"progress\":\"Progress_progress__35HTX\",\"genius\":\"Progress_genius__CHfIn\",\"currentPoints\":\"Progress_currentPoints__dgHkL\",\"totalPoints\":\"Progress_totalPoints__K7MCw\",\"help\":\"Progress_help__2uPTW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarButton\":\"UserDialog_avatarButton__2UVk5\",\"providersContainer\":\"UserDialog_providersContainer__2CXnF\",\"provider\":\"UserDialog_provider__1tDdf\",\"buttons\":\"UserDialog_buttons__1CEoc\",\"logOut\":\"UserDialog_logOut__1D6Mt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DeleteAccountButton_container__kirpF\",\"buttons\":\"DeleteAccountButton_buttons__1JEsG\",\"deleteAccount\":\"DeleteAccountButton_deleteAccount__2PX7Q\",\"cancelButton\":\"DeleteAccountButton_cancelButton__2T8gP\",\"confirmButton\":\"DeleteAccountButton_confirmButton__Qftem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderButton_button__2v-ld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Modal_header__2ZLRN\",\"footer\":\"Modal_footer__3LLGM\",\"contents\":\"Modal_contents__2N7hF\",\"modalBackground\":\"Modal_modalBackground__gT2gd\",\"modal\":\"Modal_modal__lEGX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Yh4QF\",\"buttons\":\"Header_buttons__2PlOg\",\"right\":\"Header_right__2Q-W6\",\"left\":\"Header_left__kDMZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Messages_container__r77DS\",\"pangram\":\"Messages_pangram__2KAkr\",\"points\":\"Messages_points__2PKAz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hive_container__1Zjua\",\"gameContainer\":\"Hive_gameContainer__23RNb\",\"buttonsContainer\":\"Hive_buttonsContainer__3BlGP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WordList_container__3HxBt\",\"wordList\":\"WordList_wordList__27YZp\",\"content\":\"WordList_content__1GVCz\",\"buttons\":\"WordList_buttons__2CPkS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"word\":\"Word_word__391Ih\",\"revealed\":\"Word_revealed__18kLo\",\"pangram\":\"Word_pangram__sghFn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loading_container__3Q6Jl\",\"ldsRipple\":\"Loading_ldsRipple__3LZlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reveal\":\"RevealButton_reveal__1V7u7\",\"revealContainer\":\"RevealButton_revealContainer__1AyJ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"Sidebar_column__1BssC\",\"header\":\"Sidebar_header__24dGv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"GridInfo_button__348Wh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"WordsInfo_button__2hHAV\"};","import { useEffect } from 'react';\n\nexport const useNoBodyScroll = () => {\n  useEffect(() => {\n    document.body.classList.add('no-scroll');\n    return () => {\n      document.body.classList.remove('no-scroll');\n    };\n  }, []);\n};\n","import { useNoBodyScroll } from '../useNoBodyScroll';\nimport classes from './Loading.module.css';\n\nconst Loading = () => {\n  useNoBodyScroll();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.ldsRipple}>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import pako from 'pako';\n\nexport const jsonFetch = (url: string) =>\n  fetch(url, { headers: { 'Content-Type': 'application/json' } }).then((resp) =>\n    resp.json()\n  );\n\nexport const gzipJsonFetch = (url: string) =>\n  fetch(url, {\n    headers: { 'Content-Type': 'application/json', 'Content-Encoding': 'gzip' },\n  })\n    .then((resp) => resp.arrayBuffer())\n    .then((buf) => new Uint8Array(buf))\n    .then((buf) => pako.inflate(buf))\n    .then((buf) => new TextDecoder('utf-8').decode(buf))\n    .then((str) => JSON.parse(str));\n","const MAX_VALUE = Math.pow(2, 32);\n\nconst hashCode = (input: string) => {\n  let hash = 0;\n  for (let i = 0; i < input.length; i += 1) {\n    const char = input.charCodeAt(i);\n    hash = (31 * hash + char) % MAX_VALUE;\n  }\n  return hash;\n};\n\nexport default hashCode;\n","const twoDigits = (v: number) => {\n  if (v < 10) {\n    return `0${v}`;\n  }\n  return v;\n};\n\nexport default twoDigits;\n","import { useParams } from 'react-router-dom';\nimport hashCode from './hashCode';\nimport twoDigits from './twoDigits';\n\nexport const isProbablyDate = (gameId: string) => {\n  if (!gameId) {\n    return false;\n  }\n\n  const ymd: unknown[] | null = gameId.match(\n    /^([0-9]{4})-([0-9]{2})-([0-9]{2})$/\n  );\n\n  if (!ymd) {\n    return false;\n  }\n\n  const rest = ymd.slice(1);\n  if (rest.length !== 3) {\n    return false;\n  }\n\n  const [year, month, day] = rest.map(Number);\n\n  // Yeah, it's a best-effort thing.\n  return year && month >= 1 && month <= 12 && day >= 1 && day <= 31;\n};\n\nexport const useGameId = () => {\n  const { gameId: gameIdParam } = useParams<{ gameId?: string }>();\n  let gameId = gameIdParam;\n  if (!gameId) {\n    // Default it to \"today\" (whenever this is being called)\n    const now = new Date();\n    gameId = [now.getFullYear(), now.getMonth() + 1, now.getDate()]\n      .map(twoDigits)\n      .join('-');\n  }\n\n  const gameHash = hashCode(\n    // Note: we reverse the game ID here because otherwise, sequential dates\n    // will only have hashCodes that differ by one value. Instead, we want to\n    // put the least-significant bit in the beginning to lead to more entropy.\n    // Of course, it's not real entropy but that's not really what we want here.\n    gameId.split('').reverse().join('')\n  );\n\n  return { gameId, gameHash };\n};\n","import { atom, selector } from 'recoil';\nimport type { WordMap } from './types';\n\nexport const gamePuzzleId = atom({\n  key: 'game/puzzleId',\n  default: '',\n});\n\nexport const gameLetters = selector({\n  key: 'game/letters',\n  get: ({ get }) => {\n    const puzzleId = get(gamePuzzleId);\n    const [centerLetter, ...outerLetters] = puzzleId.split('');\n    return {\n      centerLetter,\n      outerLetters,\n      all: puzzleId.split('').sort().join(''),\n    };\n  },\n});\n\nexport const gameWords = atom({\n  key: 'game/words',\n  default: [] as string[],\n});\n\nexport const gameFoundWords = atom({\n  key: 'game/words/found',\n  default: {} as WordMap,\n});\n","import { gameLetters, gamePuzzleId } from 'GameLoader/recoil';\nimport { useRecoilValue } from 'recoil';\n\nexport const useLetters = () => {\n  const puzzleId = useRecoilValue(gamePuzzleId);\n  const letters = useRecoilValue(gameLetters);\n  return {\n    ...letters,\n    puzzleId,\n  };\n};\n","import { useRecoilValue } from 'recoil';\nimport { gamePuzzleId } from './recoil';\n\n// I'm not thrilled about this.\nexport const usePuzzlePath = () => {\n  const puzzleId = useRecoilValue(gamePuzzleId);\n  return ['nb-no', 'saved', puzzleId].join('/');\n};\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBYTeM84x71LjRl3-a8TIOHX1tlyiy_5ik',\n  authDomain: 'stavehumle.firebaseapp.com',\n  databaseURL:\n    'https://stavehumle-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'stavehumle',\n  storageBucket: 'stavehumle.appspot.com',\n  messagingSenderId: '852736381893',\n  appId: '1:852736381893:web:be9b224f46ba1ed92871ac',\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport default firebase;\n","import { useCallback, useEffect, useState } from 'react';\nimport firebase from './firebase-import';\n\nexport const useLogin = () => {\n  const [userId, setUserId] = useState(() => {\n    return firebase.auth().currentUser?.uid || '';\n  });\n\n  const onAuthStateChanged = useCallback(\n    (user: firebase.User | null) => {\n      if (!user) {\n        setUserId('');\n      } else {\n        setUserId(user.uid);\n      }\n    },\n    [setUserId]\n  );\n\n  useEffect(() => {\n    return firebase.auth().onAuthStateChanged(onAuthStateChanged);\n  }, [onAuthStateChanged]);\n\n  return { userId, path: userId ? `/users/${userId}` : '' };\n};\n","import { useEffect } from 'react';\n\nconst FOUND_WORD = 'found-word';\n\nexport type NewWordInfo = {\n  word: string;\n  when: Date;\n  source: 'local' | 'remote';\n};\n\nexport class FoundWordEvent extends CustomEvent<NewWordInfo> {\n  constructor(word: string, when: Date, source: NewWordInfo['source']) {\n    super(FOUND_WORD, {\n      detail: { word, when, source },\n    });\n  }\n}\n\nexport type NewWordCallback = (wordInfo: NewWordInfo) => void;\n\nexport const useNewWordFound = (callback: (wordInfo: NewWordInfo) => void) => {\n  useEffect(() => {\n    const wrapper = (e: Event) => {\n      const { detail: info } = e as CustomEvent<NewWordInfo>;\n      callback(info);\n    };\n\n    window.addEventListener(FOUND_WORD, wrapper);\n    return () => {\n      window.removeEventListener(FOUND_WORD, wrapper);\n    };\n  }, [callback]);\n};\n","import { NewWordInfo, useNewWordFound } from 'custom-events';\nimport { useCallback } from 'react';\nimport firebase from 'sync';\n\ntype Props = {\n  children: React.ReactNode;\n  node: string;\n};\n\nconst UploadNewLocalWords = ({ children, node }: Props) => {\n  const onWordFound = useCallback(\n    ({ word, when, source }: NewWordInfo) => {\n      if (source !== 'local') {\n        return;\n      }\n\n      firebase\n        .database()\n        .ref(node)\n        .update({\n          [word]: when,\n        });\n    },\n    [node]\n  );\n\n  useNewWordFound(onWordFound);\n\n  return <>{children}</>;\n};\n\nexport default UploadNewLocalWords;\n","import { gameWords } from 'GameLoader/recoil';\nimport { useRecoilValue } from 'recoil';\n\nexport const useWords = () => {\n  const words = useRecoilValue(gameWords);\n  return { words };\n};\n","import { FoundWordEvent } from 'custom-events';\nimport { gameFoundWords } from 'GameLoader/recoil';\nimport { useWords } from 'GameLoader/useWords';\nimport { useCallback, useEffect } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport firebase from 'sync';\n\ntype Props = {\n  children: React.ReactNode;\n  node: string;\n};\n\nconst InsertNewRemoteWords = ({ children, node }: Props) => {\n  const foundWords = useRecoilValue(gameFoundWords);\n  const { words: validWords } = useWords();\n\n  const onWordFound = useCallback(\n    (snap: firebase.database.DataSnapshot) => {\n      const newWord = snap.key;\n      if (!newWord) {\n        console.warn('No key specified');\n        return;\n      }\n\n      if (foundWords[newWord]) {\n        // Already discovered\n        return;\n      }\n\n      const dateStr = snap.val();\n      if (!validWords.includes(newWord)) {\n        console.warn(`\"${newWord}\" is not a recognized word`);\n        return;\n      }\n\n      const timestamp = Date.parse(dateStr);\n      if (timestamp === undefined) {\n        console.warn(`\"${newWord}\" didn't have a valid date (${dateStr})`);\n        return;\n      }\n\n      window.dispatchEvent(\n        new FoundWordEvent(newWord, new Date(timestamp), 'remote')\n      );\n    },\n    [validWords, foundWords]\n  );\n\n  useEffect(() => {\n    const ref = firebase.database().ref(node);\n    ref.on('child_added', onWordFound);\n    return () => {\n      ref.off('child_added', onWordFound);\n    };\n  }, [onWordFound, node]);\n\n  return <>{children}</>;\n};\n\nexport default InsertNewRemoteWords;\n","import { WordMap } from 'GameLoader/types';\n\nexport const getSavedWords = (key: string): WordMap => {\n  try {\n    const item = localStorage.getItem(key);\n    if (item) {\n      const saved = JSON.parse(item);\n      if (Array.isArray(saved)) {\n        // We're about to destructively migrate some data. Let's stash a copy\n        // just because I'm scared.\n        localStorage.setItem(`backup/${key}`, item);\n\n        const migrated = saved\n          .filter((word) => typeof word === 'string')\n          .reduce((acc, word, i) => ({ ...acc, [word]: new Date(i) }), {});\n        localStorage.setItem(key, JSON.stringify(migrated));\n        return getSavedWords(key);\n      }\n      return Object.entries(saved)\n        .filter(([_, date]) => !!date)\n        .reduce((acc, [k, v]) => ({ ...acc, [k]: v }), {});\n    }\n  } catch (ex) {\n    // Do nothing\n  }\n\n  return {} as WordMap;\n};\n","import { useEffect } from 'react';\nimport firebase, { useLogin } from 'sync';\nimport { getSavedWords } from 'storage';\n\ntype Props2 = {\n  children: React.ReactNode;\n  node: string;\n};\n\nconst UploadInitialLocalStorage = ({ children, node }: Props2) => {\n  const { path } = useLogin();\n\n  useEffect(() => {\n    const values: Record<string, object | string | null> = {};\n    for (let i = 0; i < localStorage.length; i += 1) {\n      const key = localStorage.key(i);\n      if (!key) {\n        continue;\n      }\n\n      if (key.startsWith('backup')) {\n        continue;\n      }\n\n      if (key.includes('/saved/')) {\n        const words = getSavedWords(key);\n        if (Object.keys(words).length === 0) {\n          continue;\n        }\n\n        values[key] = words;\n      }\n\n      if (key.includes('/revealed/')) {\n        values[key] = localStorage.getItem(key);\n      }\n    }\n\n    if (Object.keys(values).length === 0) {\n      return;\n    }\n\n    firebase.database().ref(path).update(values);\n  }, [path]);\n\n  return <>{children}</>;\n};\n\nexport default UploadInitialLocalStorage;\n","import { useEffect } from 'react';\nimport firebase from 'sync';\nimport { useWords } from 'GameLoader/useWords';\nimport { FoundWordEvent } from 'custom-events';\nimport { WordMap } from 'GameLoader/types';\n\ntype Props2 = {\n  children: React.ReactNode;\n  node: string;\n};\n\nconst DownloadInitialRemoteWords = ({ children, node }: Props2) => {\n  const { words: validWords } = useWords();\n\n  useEffect(() => {\n    firebase\n      .database()\n      .ref(node)\n      .once('value')\n      .then((snap) => {\n        if (!snap.exists()) {\n          return;\n        }\n\n        const wordMap = validWords.reduce<Record<string, true>>(\n          (acc, word) => ({ ...acc, [word]: true }),\n          {}\n        );\n        const newWords = {} as WordMap;\n        const remoteWords = snap.val() as Record<string, string>;\n        Object.entries(remoteWords).forEach(([word, dateStr]) => {\n          if (!wordMap[word]) {\n            console.warn(`\"${word}\" is not a recognized word`);\n            return;\n          }\n\n          const timestamp = Date.parse(dateStr);\n          if (timestamp === undefined) {\n            console.warn(`\"${word}\" as an invalid date (${dateStr})`);\n            return;\n          }\n\n          newWords[word] = new Date(timestamp);\n        });\n\n        Object.entries(newWords)\n          .sort(([wordA, whenA], [wordB, whenB]) => {\n            return +whenA - +whenB;\n          })\n          .forEach(([word, when]) => {\n            window.dispatchEvent(new FoundWordEvent(word, when, 'remote'));\n          });\n      });\n  }, [node, validWords]);\n\n  return <>{children}</>;\n};\n\nexport default DownloadInitialRemoteWords;\n","import { usePuzzlePath } from 'GameLoader/usePuzzlePath';\nimport { useLogin } from '../../sync';\nimport UploadNewLocalWords from './UploadNewLocalWords';\nimport InsertNewRemoteWords from './InsertNewRemoteWords';\nimport UploadInitialLocalStorage from './UploadInitialLocalStorage';\nimport DownloadInitialRemoteWords from './DownloadInitialRemoteWords';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst FirebaseWatcher = ({ children }: Props) => {\n  const key = usePuzzlePath();\n  const { userId } = useLogin();\n\n  if (!userId) {\n    return <>{children}</>;\n  }\n\n  const path = `/users/${userId}/${key}`;\n\n  // TODO: In the future, consider inlining each of these into their respective\n  // components. That is, until things have been uploaded, don't download the\n  // remote set. And don't watch for new words until the initial set has been\n  // downloaded. Etc.\n  return (\n    <UploadInitialLocalStorage node={path}>\n      <UploadNewLocalWords node={path}>\n        <DownloadInitialRemoteWords node={path}>\n          <InsertNewRemoteWords node={path}>\n            <>{children}</>\n          </InsertNewRemoteWords>\n        </DownloadInitialRemoteWords>\n      </UploadNewLocalWords>\n    </UploadInitialLocalStorage>\n  );\n};\n\nexport default FirebaseWatcher;\n","import { useNewWordFound } from 'custom-events';\nimport { gameFoundWords } from 'GameLoader/recoil';\nimport { usePuzzlePath } from 'GameLoader/usePuzzlePath';\nimport { useCallback, useEffect } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport { getSavedWords } from 'storage';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst LocalStorageSyncer = ({ children }: Props) => {\n  const key = usePuzzlePath();\n  const setFoundWords = useSetRecoilState(gameFoundWords);\n\n  useEffect(() => {\n    setFoundWords(getSavedWords(key));\n  }, [key, setFoundWords]);\n\n  const onWordFound = useCallback(\n    ({ word, when }) => {\n      setFoundWords((old) => {\n        const next = { ...old, [word]: when };\n        localStorage.setItem(key, JSON.stringify(next));\n        return next;\n      });\n    },\n    [key, setFoundWords]\n  );\n\n  useNewWordFound(onWordFound);\n\n  return <>{children}</>;\n};\n\nexport default LocalStorageSyncer;\n","import Loading from 'Loading';\nimport { useRecoilValue } from 'recoil';\nimport { useLoadLetters } from './useLoadLetters';\nimport { gameWords } from './recoil';\nimport { useLoadWords } from './useLoadWords';\nimport FirebaseSyncer from './FirebaseSyncer';\nimport LocalStorageSyncer from './LocalStorageSyncer';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst GameLoader = ({ children }: Props) => {\n  const { error: loadLettersError } = useLoadLetters();\n  const { error: loadWordsError } = useLoadWords();\n\n  const words = useRecoilValue(gameWords);\n\n  if (!words.length) {\n    return <Loading />;\n  }\n\n  if (loadLettersError) {\n    return <div>Error loading the letters</div>;\n  }\n\n  if (loadWordsError) {\n    console.error(loadWordsError);\n    return <div>Error loading the words</div>;\n  }\n\n  return (\n    <LocalStorageSyncer>\n      <FirebaseSyncer>{children}</FirebaseSyncer>\n    </LocalStorageSyncer>\n  );\n};\n\nexport default GameLoader;\n","import { useEffect, useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport { gzipJsonFetch } from '../api';\nimport { useGameId } from '../hooks';\nimport { gamePuzzleId } from './recoil';\n\ntype OuterLetters = [string, string, string, string, string, string];\n\nexport const useLoadLetters = () => {\n  const { gameHash } = useGameId();\n  const [error, setError] = useState<Error | undefined>();\n  const setPuzzleId = useSetRecoilState(gamePuzzleId);\n\n  useEffect(() => {\n    gzipJsonFetch(`${process.env.PUBLIC_URL}/words/options.json.gz`)\n      .then((options) => options[gameHash % options.length])\n      .then((option: string) => {\n        const letters = option.split('');\n        const centerLetter = letters[gameHash % letters.length];\n        const outerLetters = letters.filter(\n          (letter) => letter !== centerLetter\n        ) as OuterLetters;\n        return [centerLetter, ...outerLetters.sort()].join('');\n      })\n      .then((puzzleId) => setPuzzleId(puzzleId))\n      .catch((e) => {\n        console.error(e);\n        setError(e);\n      });\n  }, [gameHash, setPuzzleId]);\n\n  return { error };\n};\n","import { useEffect, useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport { gzipJsonFetch } from '../api';\nimport { gameWords } from './recoil';\nimport { useLetters } from './useLetters';\n\nexport const useLoadWords = () => {\n  const { all, centerLetter } = useLetters();\n\n  const setWords = useSetRecoilState(gameWords);\n  const [error, setError] = useState<Error | undefined>();\n\n  useEffect(() => {\n    if (!all) {\n      return;\n    }\n\n    const key = all.substring(0, 3);\n    const url = `${process.env.PUBLIC_URL}/words/${key}.json.gz`;\n    gzipJsonFetch(url)\n      .then((obj) => obj[all])\n      .then((loadedWords) =>\n        loadedWords.filter((word: string) => word.includes(centerLetter))\n      )\n      .then(setWords)\n      .catch(setError);\n\n    return () => {\n      setWords([]);\n    };\n  }, [all, centerLetter, setWords]);\n\n  return { error };\n};\n","import { useRecoilValue } from 'recoil';\nimport { gameFoundWords } from './recoil';\n\nexport const useFoundWords = () => {\n  const foundWords = useRecoilValue(gameFoundWords);\n  return {\n    found: foundWords,\n  };\n};\n","const isPangram = (str: string) => {\n  return new Set(str.split('')).size === 7;\n};\n\nexport default isPangram;\n","import isPangram from 'isPangram';\n\nconst scoreWord = (word: string) => {\n  if (word.length < 4) {\n    return 0;\n  }\n\n  if (word.length === 4) {\n    return 1;\n  }\n\n  const bonus = isPangram(word) ? 7 : 0;\n  return word.length + bonus;\n};\n\nexport default scoreWord;\n","import { FoundWordEvent } from 'custom-events';\nimport { useFoundWords, useLetters, useWords } from 'GameLoader';\nimport { useCallback, useMemo } from 'react';\nimport scoreWord from 'score';\n\nexport const useScore = (words: string[]) => {\n  const score = useMemo(() => {\n    return words\n      .map((word) => scoreWord(word))\n      .reduce((total, wordScore) => total + wordScore, 0);\n  }, [words]);\n\n  return { score };\n};\n\nexport const useGame = () => {\n  const { found: foundWordsMap } = useFoundWords();\n  const { all, centerLetter } = useLetters();\n  const { words } = useWords();\n\n  const makeGuess = useCallback(\n    (input: string) => {\n      if (!input) {\n        // No error message for this.\n        return;\n      }\n\n      const word = input\n        .toLocaleLowerCase()\n        .split('')\n        .filter((letter) => all.includes(letter))\n        .join('');\n\n      if (word.length !== input.length) {\n        dispatchEvent(\n          new CustomEvent('bad-guess', { detail: 'invalid-letters' })\n        );\n        return;\n      }\n\n      if (word.length < 4) {\n        dispatchEvent(new CustomEvent('bad-guess', { detail: 'too-short' }));\n        return;\n      }\n\n      if (!word.includes(centerLetter)) {\n        dispatchEvent(\n          new CustomEvent('bad-guess', { detail: 'missing-center' })\n        );\n        return;\n      }\n\n      if (foundWordsMap[word]) {\n        dispatchEvent(\n          new CustomEvent('bad-guess', { detail: 'already-found' })\n        );\n        return;\n      }\n\n      if (!words.includes(word)) {\n        dispatchEvent(new CustomEvent('bad-guess', { detail: 'unknown-word' }));\n        return;\n      }\n\n      dispatchEvent(new FoundWordEvent(word, new Date(), 'local'));\n    },\n    [all, centerLetter, foundWordsMap, words]\n  );\n\n  return {\n    onGuess: makeGuess,\n    found: Object.keys(foundWordsMap),\n  };\n};\n","const shuffle = (original: string[]) =>\n  original\n    .map((a) => ({ sort: Math.random(), value: a }))\n    .sort((a, b) => a.sort - b.sort)\n    .map((a) => a.value);\n\nexport default shuffle;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useLetters } from 'GameLoader';\nimport shuffle from 'shuffle';\n\nconst useShuffledLetters = () => {\n  const { outerLetters } = useLetters();\n  const [shuffled, setShuffled] = useState<string[]>([]);\n\n  const shuffleLetters = useCallback(() => {\n    setShuffled(shuffle(outerLetters));\n  }, [outerLetters]);\n\n  useEffect(() => {\n    setShuffled(shuffle(outerLetters));\n  }, [outerLetters, setShuffled]);\n\n  return {\n    shuffled,\n    reshuffle: shuffleLetters,\n  };\n};\n\nexport default useShuffledLetters;\n","import { useLetters } from 'GameLoader';\n\nimport { useCallback, useEffect, useState } from 'react';\n\nexport const useRevealed = () => {\n  const { centerLetter, outerLetters } = useLetters();\n  const key = [\n    'nb-no', // Multi-lingual .. some day\n    'revealed',\n    [centerLetter, ...outerLetters].join(''),\n  ].join('/');\n\n  const [revealed, setLocalRevealed] = useState(false);\n\n  useEffect(() => {\n    const when = localStorage.getItem(key);\n    setLocalRevealed(!!when);\n  }, [key, setLocalRevealed]);\n\n  const revealAnswers = useCallback(() => {\n    localStorage.setItem(key, new Date().toISOString());\n    window.dispatchEvent(new CustomEvent('revealed', { detail: key }));\n  }, [key]);\n\n  const onRevealed = useCallback(\n    (e: Event) => {\n      const { detail } = e as CustomEvent<string>;\n      if (detail !== key) {\n        return;\n      }\n      setLocalRevealed(true);\n    },\n    [key, setLocalRevealed]\n  );\n\n  useEffect(() => {\n    window.addEventListener('revealed', onRevealed);\n    return () => {\n      window.removeEventListener('revealed', onRevealed);\n    };\n  }, [onRevealed]);\n\n  return { revealed, revealAnswers };\n};\n","import {\n  MdKeyboardBackspace as Backspace,\n  MdRefresh as Shuffle,\n  MdKeyboardReturn as Enter,\n} from 'react-icons/md';\nimport classes from './Buttons.module.css';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useLetters } from 'GameLoader';\nimport { useGame } from '../hooks';\nimport useShuffledLetters from './useShuffledLetters';\nimport { useRevealed } from 'Hive/useRevealed';\n\nconst Buttons = () => {\n  const { onGuess } = useGame();\n\n  const { all, centerLetter, outerLetters } = useLetters();\n  const [guess, setGuess] = useState('');\n  const { shuffled, reshuffle } = useShuffledLetters();\n  const { revealed } = useRevealed();\n\n  const guessRef = useRef('');\n  guessRef.current = guess;\n\n  useEffect(() => {\n    guessRef.current = '';\n    setGuess('');\n  }, [outerLetters, centerLetter]);\n\n  const makeGuess = useCallback(() => {\n    onGuess(guessRef.current);\n    setGuess('');\n  }, [onGuess, guessRef]);\n\n  const onLetterClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      const button = event.currentTarget;\n      const letter = button.getAttribute('data-letter');\n      setGuess((g) => `${g}${letter}`);\n    },\n    [setGuess]\n  );\n\n  const onBackspace = useCallback(() => {\n    setGuess((g) => g.substr(0, g.length - 1));\n  }, [setGuess]);\n\n  const onKeyPress = useCallback(\n    (e: KeyboardEvent) => {\n      const { key } = e;\n\n      if (revealed) {\n        return;\n      }\n\n      if (key === 'Backspace') {\n        setGuess((g) => g.substring(0, g.length - 1));\n        return;\n      }\n\n      if (key === ' ') {\n        reshuffle();\n        e.preventDefault();\n        return;\n      }\n\n      if (key === 'Enter') {\n        makeGuess();\n      }\n\n      if (!all.includes(key.toLocaleLowerCase())) {\n        return;\n      }\n\n      setGuess((g) => `${g}${key}`);\n    },\n    [all, makeGuess, reshuffle, revealed]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', onKeyPress);\n    return () => {\n      document.removeEventListener('keydown', onKeyPress);\n    };\n  }, [onKeyPress]);\n\n  type LetterButtonProps = { letter: string } & JSX.IntrinsicElements['button'];\n\n  const LetterButton = ({ letter, className, ...rest }: LetterButtonProps) => {\n    return (\n      <button\n        data-letter={letter}\n        onClick={onLetterClick}\n        className={[classes.letterButton, className].filter(Boolean).join(' ')}\n        {...rest}\n        disabled={revealed}\n      >\n        {letter}\n      </button>\n    );\n  };\n\n  const CenterLetterButton = (props: LetterButtonProps) => (\n    <LetterButton {...props} className={classes.centerLetter} />\n  );\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.guess}>{guess || <>&nbsp;</>}</div>\n      <div className={classes.letterButtons}>\n        <div className={classes.topRow}>\n          <LetterButton letter={shuffled[0]} />\n          <LetterButton letter={shuffled[1]} />\n        </div>\n        <div className={classes.middleRow}>\n          <LetterButton letter={shuffled[2]} />\n          <CenterLetterButton letter={centerLetter} />\n          <LetterButton letter={shuffled[3]} />\n        </div>\n        <div className={classes.bottomRow}>\n          <LetterButton letter={shuffled[4]} />\n          <LetterButton letter={shuffled[5]} />\n        </div>\n      </div>\n      <div className={classes.controls}>\n        <button disabled={revealed} onClick={onBackspace} aria-label=\"baksiden\">\n          <Backspace />\n        </button>\n        <button\n          disabled={revealed}\n          onClick={reshuffle}\n          aria-label=\"tilfeldig rekkefølge\"\n        >\n          <Shuffle />\n        </button>\n        <button disabled={revealed} onClick={makeGuess} aria-label=\"sende inn\">\n          <Enter />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import ReactDOM from 'react-dom';\nimport classes from './Modal.module.css';\nimport { MdClose as Close } from 'react-icons/md';\nimport { useNoBodyScroll } from '../useNoBodyScroll';\nimport { useCallback, useEffect } from 'react';\n\ntype Props = {\n  title: string;\n  children: React.ReactNode;\n  onClose: () => void;\n};\n\nconst Modal = ({ children, title, onClose }: Props) => {\n  useNoBodyScroll();\n\n  const onKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeyDown);\n    return () => {\n      window.removeEventListener('keydown', onKeyDown);\n    };\n  }, [onKeyDown]);\n\n  return ReactDOM.createPortal(\n    <div className={classes.modalBackground} onClick={onClose}>\n      <div className={classes.modal} onClick={(e) => e.stopPropagation()}>\n        <div className={classes.header}>\n          <h2>{title}</h2>\n          <button onClick={onClose} aria-label=\"lukk vinduet\">\n            <Close />\n          </button>\n        </div>\n        <div className={classes.contents}>{children}</div>\n        <div className={classes.footer}>\n          <button onClick={onClose}>Lukk</button>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/Humle.d54d42c1.svg\";","import { CSSProperties } from 'react';\nimport SVG from './Humle.svg';\n\ntype Props = {\n  size?: number;\n  style?: CSSProperties;\n};\n\nconst Icon = ({ size = 36, style = {} }: Props) => {\n  return (\n    <img\n      src={SVG}\n      width={size}\n      height={size}\n      style={{ margin: 0, padding: 0, ...style }}\n      alt=\"Stavehumle ikon\"\n    />\n  );\n};\n\nexport default Icon;\n","import { useMemo, useState } from 'react';\nimport { MdInfoOutline as InfoIcon } from 'react-icons/md';\nimport headerClasses from '../HeaderButton.module.css';\nimport Modal from 'Modal';\nimport Icon from 'Humle';\n\nconst LAST_CLOSED_DATE = 'info-dialog/has-closed';\n\nconst InfoButton = () => {\n  const [showing, setShowing] = useState(() => {\n    return !localStorage.getItem(LAST_CLOSED_DATE);\n  });\n\n  const modal = useMemo(() => {\n    if (!showing) {\n      return null;\n    }\n\n    return (\n      <Modal\n        title=\"Stavehumle!\"\n        onClose={() => {\n          setShowing(false);\n          localStorage.setItem(LAST_CLOSED_DATE, new Date().toISOString());\n        }}\n      >\n        <p>\n          Stavehumle er et ordspill hvor du lager så mange ord som du kan. Hvert\n          puslespill har syv ulike bokstaver&mdash;en fast i midten og seks\n          rundt.\n        </p>\n        <h3>Reglene</h3>\n        <p>Hvert ord:</p>\n        <ul>\n          <li>\n            <strong>må bruke</strong> den midterste bokstaven\n          </li>\n          <li>\n            må være minst <strong>fire bokstaver</strong> langt\n          </li>\n          <li>\n            bruker <strong>kun</strong> de syv bokstavene\n            <br />\n            (men bokstaver kan gjentas)\n          </li>\n        </ul>\n        <p>\n          Hver puslespill har <strong>minst ett</strong> ord som bruker{' '}\n          <strong>alle bokstavene</strong>.\n        </p>\n        <p>\n          Det finnes en ny puslespill <strong>hver dag!</strong>\n        </p>\n        <p>Lykke til!</p>\n        <hr />\n        <p>\n          <Icon size={20} /> fra{' '}\n          <a\n            href=\"https://linkedin.com/in/baharshahriari/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Bahar Anvari\n          </a>\n        </p>\n        <p>\n          (Want to play in English? Try the{' '}\n          <a\n            href=\"https://www.nytimes.com/puzzles/spelling-bee\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            NYT Spelling Bee\n          </a>\n          !)\n        </p>\n      </Modal>\n    );\n  }, [showing]);\n\n  return (\n    <>\n      <button\n        onClick={() => setShowing(true)}\n        className={headerClasses.button}\n        aria-label=\"om Stavehumle\"\n      >\n        <InfoIcon />\n      </button>\n      {modal}\n    </>\n  );\n};\n\nexport default InfoButton;\n","import { useMemo, useState } from 'react';\nimport classes from './DatePicker.module.css';\nimport {\n  BsChevronDoubleLeft as BackYear,\n  BsChevronDoubleRight as ForwardYear,\n  BsChevronLeft as BackMonth,\n  BsChevronRight as ForwardMonth,\n} from 'react-icons/bs';\nimport { isProbablyDate } from 'hooks';\nimport twoDigits from 'twoDigits';\n\nexport type Props = {\n  gameId?: string;\n  onChange: (gameId: string) => void;\n};\n\nconst MONTHS = [\n  'januar',\n  'februar',\n  'mars',\n  'april',\n  'mai',\n  'juni',\n  'juli',\n  'august',\n  'september',\n  'oktober',\n  'november',\n  'desember',\n];\n\nconst DAYS = [\n  'm', // mandag\n  't', // tirsdag\n  'o', // onsdag\n  't', // torsdag\n  'f', // fredag\n  'l', // lørdag\n  's', // sondag\n];\n\nconst DAY_KEYS = [\n  'mandag',\n  'tirsdag',\n  'onsdag',\n  'torsdag',\n  'fredag',\n  'lørdag',\n  'sondag',\n];\n\nconst DatePicker = ({ onChange, gameId = '' }: Props) => {\n  const today = new Date();\n  const [todayYear, todayMonth, todayDate] = [\n    today.getFullYear(),\n    today.getMonth(),\n    today.getDate(),\n  ];\n\n  const currentGameDate = useMemo(() => {\n    return isProbablyDate(gameId) ? new Date(gameId) : null;\n  }, [gameId]);\n\n  const [year, setYear] = useState((currentGameDate || today).getFullYear());\n  const [month, setMonth] = useState((currentGameDate || today).getMonth());\n\n  const changeYear = (delta: 1 | -1) => () => {\n    setYear((y) => y + delta);\n  };\n\n  const changeMonth = (delta: 1 | -1) => () => {\n    setMonth((m) => {\n      const added = m + delta;\n      if (added < 0) {\n        setYear((y) => y - 1);\n        return 11;\n      }\n      if (added >= 12) {\n        setYear((y) => y + 1);\n        return 0;\n      }\n      return added;\n    });\n  };\n\n  const monthGrid = useMemo(() => {\n    const start = new Date(year, month, 1);\n    const dayOfWeek = start.getDay();\n\n    const cells = [];\n    for (let i = 0; i < 7; i += 1) {\n      cells.push(\n        <div className={classes.dayHeader} key={`day-${DAY_KEYS[i]}`}>\n          {DAYS[i]}\n        </div>\n      );\n    }\n\n    for (let i = 1; i < dayOfWeek; i += 1) {\n      cells.push(\n        <div key={`filler-${i}`} className={classes.filler}>\n          &nbsp;\n        </div>\n      );\n    }\n\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    for (let i = 1; i <= daysInMonth; i += 1) {\n      const isToday =\n        year === todayYear && month === todayMonth && i === todayDate;\n\n      const isCurrent =\n        currentGameDate &&\n        year === currentGameDate.getFullYear() &&\n        month === currentGameDate.getMonth() &&\n        i === currentGameDate.getDate();\n\n      const classNames = [classes.dateButton];\n      if (isToday) {\n        classNames.push(classes.todayButton);\n      }\n      if (isCurrent) {\n        classNames.push(classes.currentButton);\n      }\n\n      const ariaLabel = `velg ${year}-${month}-${i}`;\n\n      cells.push(\n        <button\n          key={`date-${i}`}\n          className={classNames.join(' ')}\n          onClick={() => {\n            onChange(`${year}-${twoDigits(month + 1)}-${twoDigits(i)}`);\n          }}\n          aria-label={ariaLabel}\n        >\n          {i}\n        </button>\n      );\n    }\n\n    return <div className={classes.monthGrid}>{cells}</div>;\n  }, [\n    year,\n    month,\n    onChange,\n    currentGameDate,\n    todayYear,\n    todayMonth,\n    todayDate,\n  ]);\n\n  return (\n    <div>\n      <div className={classes.header}>\n        <button onClick={changeYear(-1)} aria-label=\"tilbake ett år\">\n          <BackYear />\n        </button>\n        <button onClick={changeMonth(-1)} aria-label=\"tilbake en måned\">\n          <BackMonth />\n        </button>\n        <button\n          className={classes.center}\n          onClick={() => {\n            const now = new Date();\n            setYear(now.getFullYear());\n            setMonth(now.getMonth());\n          }}\n        >\n          <span className={classes.year}>{year}</span>\n          &nbsp;/&nbsp;\n          <span className={classes.month}>{MONTHS[month]}</span>\n        </button>\n        <button onClick={changeMonth(1)} aria-label=\"frem en måned\">\n          <ForwardMonth />\n        </button>\n        <button onClick={changeYear(1)} aria-label=\"frem ett år\">\n          <ForwardYear />\n        </button>\n      </div>\n      {monthGrid}\n    </div>\n  );\n};\n\nexport default DatePicker;\n","import { useCallback, useMemo, useState } from 'react';\nimport { MdToday as CalendarIcon } from 'react-icons/md';\nimport { useHistory } from 'react-router-dom';\nimport Modal from 'Modal';\nimport headerClasses from '../HeaderButton.module.css';\nimport DatePicker from './DatePicker';\nimport { useGameId } from 'hooks';\n\nconst CalendarButton = () => {\n  const history = useHistory();\n  const [showing, setShowing] = useState(false);\n  const { gameId } = useGameId();\n\n  const onClose = useCallback(() => {\n    setShowing(false);\n  }, [setShowing]);\n\n  const onNewDatePicked = useCallback(\n    (gameId: string) => {\n      onClose();\n      history.push(`/${gameId}`);\n    },\n    [onClose, history]\n  );\n\n  const modal = useMemo(() => {\n    if (!showing) {\n      return null;\n    }\n    return (\n      <Modal title=\"Velg dato\" onClose={() => setShowing(false)}>\n        <DatePicker onChange={onNewDatePicked} gameId={gameId} />\n      </Modal>\n    );\n  }, [showing, setShowing, onNewDatePicked, gameId]);\n\n  return (\n    <>\n      <button\n        onClick={() => setShowing(true)}\n        className={headerClasses.button}\n        aria-label=\"velg en annen dato\"\n      >\n        <CalendarIcon />\n      </button>\n      {modal}\n    </>\n  );\n};\n\nexport default CalendarButton;\n","import Modal from 'Modal';\nimport { useCallback, useMemo, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BiUserCircle as AvatarIcon } from 'react-icons/bi';\nimport { FaGoogle as GoogleIcon, FaGithub as GithubIcon } from 'react-icons/fa';\nimport firebase, { useLogin } from 'sync';\nimport classes from './UserDialog.module.css';\nimport headerClasses from '../HeaderButton.module.css';\nimport DeleteAccountButton from './DeleteAccountButton';\n\n// This takes some more work; flag it out for now\nconst ENABLE_DELETE_ACCOUNT = false;\n\nconst UserDialog = () => {\n  const { userId } = useLogin();\n  const [signingIn, setSigningIn] = useState(false);\n  const [showing, setShowing] = useState(false);\n\n  const onClose = useCallback(() => {\n    setShowing(false);\n    setSigningIn(false);\n  }, [setShowing]);\n\n  const performLogin = useCallback((provider: firebase.auth.AuthProvider) => {\n    setSigningIn(true);\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .catch(console.error)\n      .finally(() => setSigningIn(false));\n  }, []);\n\n  const eraseEverything = useCallback(() => {\n    const { currentUser } = firebase.auth();\n    if (!currentUser) {\n      // Somehow we got into this state. Just fail fast.\n      return;\n    }\n\n    setSigningIn(true);\n    firebase\n      .database()\n      .ref(`/users/${currentUser.uid}`)\n      .set(null)\n      .then(() => currentUser.delete())\n      .then(() => setSigningIn(false));\n  }, []);\n\n  const modal = useMemo(() => {\n    if (!showing) {\n      return null;\n    }\n\n    let title = '';\n    let content = null;\n    if (!userId) {\n      title = 'Lagre fremgangen';\n      content = (\n        <>\n          <p>\n            Hvis du logger på, er det mulig å løse puslespillet på flere\n            enheter. Finn ord på mobil på bussen, og fortsett spille hjemme på\n            datamaskinen!\n          </p>\n          <div className={classes.providersContainer}>\n            <button\n              className={classes.provider}\n              disabled={signingIn}\n              onClick={() =>\n                performLogin(new firebase.auth.GoogleAuthProvider())\n              }\n            >\n              <GoogleIcon />\n            </button>\n            <button\n              className={classes.provider}\n              disabled={signingIn}\n              onClick={() =>\n                performLogin(new firebase.auth.GithubAuthProvider())\n              }\n            >\n              <GithubIcon />\n            </button>\n          </div>\n        </>\n      );\n    } else {\n      const deleteAccount = ENABLE_DELETE_ACCOUNT && (\n        <>\n          <hr />\n          <p>\n            Hvis du vil, du kan slette kontoen din (og alle relaterte\n            informasjon)\n          </p>\n          <DeleteAccountButton onDelete={() => eraseEverything()} />\n        </>\n      );\n\n      title = 'Din konto';\n      content = (\n        <>\n          <p>\n            Du er nå logget inn -- fremgangen din er lagret og vil være\n            tilgjengelig på andre enheter hvor du er logget inn.\n          </p>\n          <p>\n            Hvis du logger ut, fremgangen din vil bli lagret til neste gang.\n          </p>\n          <div className={classes.buttons}>\n            <button\n              onClick={() => firebase.auth().signOut()}\n              className={classes.logOut}\n            >\n              Logg ut\n            </button>\n          </div>\n          {deleteAccount}\n        </>\n      );\n    }\n\n    return (\n      <Modal title={title} onClose={onClose}>\n        {content}\n      </Modal>\n    );\n  }, [showing, onClose, userId, signingIn, performLogin, eraseEverything]);\n\n  const portal = ReactDOM.createPortal(modal, document.body);\n  return (\n    <>\n      <button\n        onClick={() => setShowing(true)}\n        className={[classes.avatarButton, headerClasses.button].join(' ')}\n      >\n        <AvatarIcon />\n      </button>\n      {portal}\n    </>\n  );\n};\n\nexport default UserDialog;\n","import { Link } from 'react-router-dom';\nimport InfoButton from './InfoButton';\nimport CalendarButton from './CalendarButton';\nimport classes from './Header.module.css';\nimport Icon from 'Humle';\nimport UserDialog from './UserDialog';\n\nconst Header = () => {\n  return (\n    <div className={classes.header}>\n      <h1>\n        <Link to=\"/\">Stavehumle</Link>\n        <Icon />\n      </h1>\n      <div className={[classes.buttons, classes.left].join(' ')}>\n        <CalendarButton />\n      </div>\n      <div className={[classes.buttons, classes.right].join(' ')}>\n        <UserDialog />\n        <InfoButton />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { BadGuess } from '../Hive';\n\ntype Props = { reason: BadGuess };\n\nconst ErrorMessage = ({ reason }: Props) => {\n  let msg = '';\n  switch (reason) {\n    case 'already-found':\n      msg = 'ordet har blitt allerede funnet';\n      break;\n    case 'invalid-letters':\n      msg = 'bruker ugyldige bokstaver';\n      break;\n    case 'missing-center':\n      msg = 'mangler obligatorisk bokstaven';\n      break;\n    case 'too-short':\n      msg = 'for kort';\n      break;\n    case 'unknown-word':\n      msg = 'ukjent ord';\n      break;\n    default:\n      return null;\n  }\n\n  return <span>{msg}</span>;\n};\n\nexport default ErrorMessage;\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ErrorMessage from './ErrorMessage';\nimport { BadGuess } from '../Hive';\nimport classes from './Messages.module.css';\nimport isPangram from 'isPangram';\nimport scoreWord from 'score';\nimport { NewWordInfo, useNewWordFound } from 'custom-events';\n\ntype FoundWord = {\n  points: number;\n};\n\ntype PangramMessage = {\n  points: number;\n  isPangram: true;\n};\n\ntype MessageType = BadGuess | PangramMessage | FoundWord | undefined;\n\nconst isFoundWord = (obj: unknown): obj is FoundWord => {\n  return !!(obj && (obj as FoundWord).points);\n};\n\nconst isPangramMessage = (obj: unknown): obj is PangramMessage => {\n  return !!(obj && (obj as PangramMessage).isPangram);\n};\n\nconst Messages = () => {\n  const [displayedMessage, setDisplayedMessage] = useState<MessageType>();\n  const timerIdRef = useRef<NodeJS.Timeout | null>();\n\n  const showMessage = useCallback(\n    (msg: MessageType) => {\n      setDisplayedMessage(msg);\n      if (timerIdRef.current) {\n        clearTimeout(timerIdRef.current);\n      }\n\n      if (!msg) {\n        timerIdRef.current = null;\n        return;\n      }\n\n      timerIdRef.current = setTimeout(() => {\n        setDisplayedMessage(undefined);\n        timerIdRef.current = null;\n      }, 2500);\n    },\n    [timerIdRef, setDisplayedMessage]\n  );\n\n  const onBadGuess = useCallback(\n    (e) => {\n      const badGuess = (e as CustomEvent<string>).detail as BadGuess;\n      showMessage(badGuess);\n    },\n    [showMessage]\n  );\n\n  const onWordFound = useCallback(\n    ({ word, source }: NewWordInfo) => {\n      if (source !== 'local') {\n        return;\n      }\n\n      if (isPangram(word)) {\n        showMessage({ points: scoreWord(word), isPangram: true });\n      } else {\n        showMessage({ points: scoreWord(word) });\n      }\n    },\n    [showMessage]\n  );\n\n  useEffect(() => {\n    window.addEventListener('bad-guess', onBadGuess);\n    return () => {\n      window.removeEventListener('bad-guess', onBadGuess);\n    };\n  }, [onBadGuess]);\n\n  useNewWordFound(onWordFound);\n\n  const message = useMemo(() => {\n    if (!displayedMessage) {\n      return null;\n    }\n\n    if (isPangramMessage(displayedMessage)) {\n      return (\n        <span className={classes.pangram}>\n          Pangram!\n          <br />+{displayedMessage.points} poeng\n        </span>\n      );\n    }\n\n    if (isFoundWord(displayedMessage)) {\n      return (\n        <span className={classes.points}>+{displayedMessage.points} poeng</span>\n      );\n    }\n\n    return <ErrorMessage reason={displayedMessage} />;\n  }, [displayedMessage]);\n\n  return <div className={classes.container}>{message}</div>;\n};\n\nexport default Messages;\n","import { useLetters } from 'GameLoader';\nimport classes from '../Grid.module.css';\n\ntype Props = {\n  words: string[];\n  range: [number, number];\n};\n\nconst EMPTY = <span className={classes.filler}>&ndash;</span>;\n\nconst WordGrid = ({ words, range: [shortest, longest] }: Props) => {\n  const { all } = useLetters();\n\n  const columns = [\n    <th key=\"blank\">&nbsp;</th>, //\n  ];\n  const totals = [];\n  for (let i = shortest; i <= longest; i += 1) {\n    columns.push(<th key={i}>{i}</th>);\n\n    const count = words.filter((word) => word.length === i).length;\n    totals.push(<td key={`total @ ${i}`}>{count || EMPTY}</td>);\n  }\n  columns.push(<th key=\"column-sum\">Σ</th>);\n\n  const body = [];\n  for (let i = 0; i < all.length; i += 1) {\n    const letter = all[i];\n    const matchingWords = words.filter((word) => word[0] === letter);\n\n    const cells = [\n      <td key={letter} className={[classes.border, classes.letter].join(' ')}>\n        {letter}\n      </td>,\n    ];\n    for (let i = shortest; i <= longest; i += 1) {\n      const matchingLength = matchingWords.filter((word) => word.length === i)\n        .length;\n      cells.push(<td key={`${letter} @ ${i}`}>{matchingLength || EMPTY}</td>);\n    }\n    cells.push(\n      <td key={`${letter} @ total`} className={classes.border}>\n        {matchingWords.length || EMPTY}\n      </td>\n    );\n\n    body.push(<tr key={`row-${letter}`}>{cells}</tr>);\n  }\n\n  body.push(\n    <tr key=\"row-totals\" className={classes.border}>\n      <td>Σ</td>\n      {totals}\n      <td>{words.length}</td>\n    </tr>\n  );\n\n  return (\n    <table className={classes.grid}>\n      <thead>\n        <tr className={classes.border}>{columns}</tr>\n      </thead>\n      <tbody>{body}</tbody>\n    </table>\n  );\n};\n\nexport default WordGrid;\n","import classes from './GridInfo.module.css';\nimport { MdHelpOutline as HelpIcon } from 'react-icons/md';\nimport { useMemo, useState } from 'react';\nimport Modal from 'Modal';\n\nconst Info = () => {\n  const [showing, setShowing] = useState(false);\n\n  const modal = useMemo(() => {\n    if (!showing) {\n      return null;\n    }\n    return (\n      <Modal title=\"Oversikt\" onClose={() => setShowing(false)}>\n        <p>\n          Oversikten er et verktøy for å hjelpe deg å finne alle ordene i\n          puslespillet. Radene viser antall ord som starter med en viss bokstav, og kolonnene\n          viser antall ord av hver lengde.\n        </p>\n        <p>Oversikten viser også antall ord totalt. Lykke til med å finne alt!</p>\n      </Modal>\n    );\n  }, [showing, setShowing]);\n\n  return (\n    <>\n      <button\n        className={classes.button}\n        onClick={() => setShowing(true)}\n        aria-label=\"Oversikten hjelp\"\n      >\n        <HelpIcon />\n      </button>\n      {modal}\n    </>\n  );\n};\n\nexport default Info;\n","import { useGame } from 'Hive/hooks';\nimport { useMemo, useState } from 'react';\nimport { useWords } from 'GameLoader';\nimport classes from './Grid.module.css';\nimport WordGrid from './WordGrid';\nimport GridInfo from './GridInfo';\n\nconst cls = (...classNames: (string | boolean)[]): string => {\n  return classNames.filter(Boolean).join(' ');\n};\n\nconst Grid = () => {\n  const { found: foundWords } = useGame();\n  const { words: allWords } = useWords();\n  const [mode, setMode] = useState<'all' | 'remaining' | 'found'>('remaining');\n\n  const gridWords = useMemo(() => {\n    if (mode === 'all') {\n      return allWords;\n    }\n\n    if (mode === 'found') {\n      return foundWords;\n    }\n\n    const foundLookup: Record<string, true> = foundWords.reduce(\n      (acc, word) => ({ ...acc, [word]: true }),\n      {}\n    );\n\n    return allWords.filter((word) => !foundLookup[word]);\n  }, [mode, allWords, foundWords]);\n\n  const range: [number, number] = allWords.reduce(\n    ([min, max], word) => {\n      return [Math.min(min, word.length), Math.max(max, word.length)];\n    },\n    [1000, 3]\n  );\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.header}>\n        <button\n          onClick={() => setMode('found')}\n          className={cls(\n            classes.mode,\n            classes.found,\n            mode === 'found' && classes.active\n          )}\n        >\n          Funnet\n        </button>\n        <button\n          onClick={() => setMode('remaining')}\n          className={cls(\n            classes.mode,\n            classes.remaining,\n            mode === 'remaining' && classes.active\n          )}\n        >\n          Gjenstår\n        </button>\n        <button\n          onClick={() => setMode('all')}\n          className={cls(\n            classes.mode,\n            classes.all,\n            mode === 'all' && classes.active\n          )}\n        >\n          Alt\n        </button>\n        <GridInfo />\n      </div>\n      <WordGrid range={range} words={gridWords} />\n    </div>\n  );\n};\n\nexport default Grid;\n","import { useWords } from 'GameLoader';\nimport { useGame, useScore } from '../../hooks';\nimport classes from './Progress.module.css';\nimport { MdHelpOutline as Help } from 'react-icons/md';\nimport { useMemo, useState } from 'react';\nimport Modal from 'Modal';\n\nconst Progress = () => {\n  const { found } = useGame();\n  const { words } = useWords();\n\n  const { score: currentPoints } = useScore(found);\n  const { score: totalPoints } = useScore(words);\n\n  const [showing, setShowing] = useState(false);\n\n  const modal = useMemo(() => {\n    if (!showing) {\n      return null;\n    }\n\n    return (\n      <Modal title=\"Poeng\" onClose={() => setShowing(false)}>\n        <p>\n          Poeng beregnes ut fra antall ord som har blitt funnet. Hvert ord gir\n          ulike poengsummer.\n        </p>\n        <ul>\n          <li>\n            ord på fire bokstaver er verdt <strong>ett poeng</strong>\n          </li>\n          <li>\n            hver bokstave etter fire er verdt <strong>ett ekstra poeng</strong>\n          </li>\n          <li>\n            ord som bruker alle bokstavene minst en gang (et pangram) gir{' '}\n            <strong>syv ekstra poeng</strong>\n          </li>\n        </ul>\n        <h3>Eksempel</h3>\n        <p>\n          H&nbsp;I&nbsp;K&nbsp;L&nbsp;O&nbsp;S&nbsp;<strong>T</strong>\n        </p>\n        <ul>\n          <li>\n            <strong>hist</strong> er 4 poeng\n          </li>\n          <li>\n            <strong>hittil</strong> er 6 poeng\n          </li>\n          <li>\n            <strong>holistisk</strong> er (9 + 7) = 16 poeng\n          </li>\n        </ul>\n      </Modal>\n    );\n  }, [showing]);\n\n  const percent = (100 * currentPoints) / totalPoints;\n  const genius = percent >= 70;\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.bars}>\n        <span className={classes.currentPoints}>{currentPoints}</span>\n        <div\n          className={[classes.progressBarContainer, genius && classes.genius]\n            .filter(Boolean)\n            .join(' ')}\n          title={`${currentPoints} av ${totalPoints} poeng`}\n          id=\"points-progress\"\n        >\n          <div\n            className={classes.progress}\n            style={{\n              width: `${percent.toFixed(2)}%`,\n            }}\n          />\n        </div>\n        <span className={classes.totalPoints}>{totalPoints}</span>\n      </div>\n      <button\n        onClick={() => setShowing(true)}\n        className={classes.help}\n        aria-label=\"poeng hjelp\"\n      >\n        <Help />\n      </button>\n      {modal}\n    </div>\n  );\n};\n\nexport default Progress;\n","import classes from './WordsInfo.module.css';\nimport { useMemo, useState } from 'react';\nimport { MdHelpOutline as HelpIcon } from 'react-icons/md';\nimport Modal from 'Modal';\n\nconst WordsInfo = () => {\n  const [showing, setShowing] = useState(false);\n\n  const modal = useMemo(() => {\n    if (!showing) {\n      return false;\n    }\n    return (\n      <Modal title=\"«Hva er disse ordene?»\" onClose={() => setShowing(false)}>\n        <p>\n          Ordene som brukes her kommer fra den{' '}\n          <a\n            href=\"https://www.nb.no/sprakbanken/ressurskatalog/oai-nb-no-sbr-5/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Norske ordbanken\n          </a>\n          . Alle ord finnes, men noen ord blir sjelden (eller aldri) sett i\n          det virkelige liv.\n        </p>\n        <p>\n          <a\n            href=\"mailto:evancharlton+humle@gmail.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Skriv en e-post\n          </a>{' '}\n          hvis du finner et galt ord 😀\n        </p>\n      </Modal>\n    );\n  }, [showing]);\n\n  return (\n    <>\n      <button\n        onClick={() => setShowing(true)}\n        className={classes.button}\n        aria-label=\"funnet ord hjelp\"\n      >\n        <HelpIcon />\n      </button>\n      {modal}\n    </>\n  );\n};\n\nexport default WordsInfo;\n","import { useGame } from 'Hive/hooks';\nimport Modal from 'Modal';\nimport { useMemo, useState } from 'react';\nimport { MdCheck as Reveal } from 'react-icons/md';\nimport { useWords } from 'GameLoader';\nimport { useRevealed } from 'Hive/useRevealed';\nimport classes from './RevealButton.module.css';\n\nconst RevealButton = () => {\n  const { revealed, revealAnswers } = useRevealed();\n  const [prompting, setPrompting] = useState(false);\n  const { found: foundWords } = useGame();\n  const { words: allWords } = useWords();\n\n  const remaining = allWords.length - foundWords.length;\n  const modal = useMemo(() => {\n    if (!prompting) {\n      return null;\n    }\n    return (\n      <Modal title=\"Er du ferdig?\" onClose={() => setPrompting(false)}>\n        <h2>Avdekke alle ordene?</h2>\n        <p>\n          Når du er ferdig, kan du vise alle ordene. Du har {remaining} ord som\n          gjenstår!\n        </p>\n        <div className={classes.revealContainer}>\n          <button\n            onClick={() => {\n              revealAnswers();\n              setPrompting(false);\n            }}\n          >\n            Jeg er ferdig!\n          </button>\n        </div>\n        <p>\n          Hvis du vil forsette å søke, klikk på <strong>«Lukk»</strong>{' '}\n          nedenfor.\n        </p>\n      </Modal>\n    );\n  }, [prompting, setPrompting, remaining, revealAnswers]);\n\n  return (\n    <>\n      <button\n        className={classes.reveal}\n        disabled={revealed}\n        onClick={() => setPrompting(true)}\n        aria-label=\"Avdekke alle ordene\"\n      >\n        <Reveal />\n      </button>\n      {modal}\n    </>\n  );\n};\n\nexport default RevealButton;\n","import { useFoundWords } from 'GameLoader';\nimport isPangram from 'isPangram';\nimport classes from './Word.module.css';\n\ntype Props = {\n  children: string;\n};\n\nconst blurLink = (e: React.MouseEvent<HTMLElement>) => e.currentTarget.blur();\n\nconst Word = ({ children: word }: Props) => {\n  const { found } = useFoundWords();\n\n  const revealed = !found[word];\n  const pangram = isPangram(word);\n\n  return (\n    <a\n      className={[\n        classes.word,\n        revealed && classes.revealed,\n        pangram && classes.pangram,\n      ]\n        .filter(Boolean)\n        .join(' ')}\n      key={word}\n      href={`https://naob.no/s%C3%B8k/${encodeURIComponent(word)}`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      onClick={blurLink}\n    >\n      {word}\n    </a>\n  );\n};\n\nexport default Word;\n","import { useMemo } from 'react';\nimport { useGame } from '../../hooks';\nimport classes from './WordList.module.css';\nimport WordsInfo from './WordsInfo';\nimport RevealButton from './RevealButton';\nimport Word from './Word';\nimport { useRevealed } from 'Hive/useRevealed';\nimport { useWords } from 'GameLoader';\n\nconst WordList = () => {\n  const { revealed } = useRevealed();\n  const { words } = useWords();\n  const { found: foundWords } = useGame();\n\n  const cleaned = useMemo(() => {\n    return (revealed ? words : foundWords)\n      .sort()\n      .map((word) => <Word key={word}>{word}</Word>);\n  }, [foundWords, revealed, words]);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.buttons}>\n        <WordsInfo />\n        <RevealButton />\n      </div>\n      <div className={classes.wordList}>{cleaned}</div>\n    </div>\n  );\n};\n\nexport default WordList;\n","import Grid from './Grid';\nimport Progress from './Progress';\nimport WordList from './WordList';\nimport classes from './Sidebar.module.css';\n\nconst Sidebar = () => {\n  return (\n    <div className={classes.column}>\n      <div className={classes.header}>\n        <Progress />\n      </div>\n      <Grid />\n      <WordList />\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import Buttons from './Buttons';\nimport Header from './Header';\nimport Messages from './Messages';\nimport classes from './Hive.module.css';\nimport Sidebar from './Sidebar';\n\nexport type BadGuess =\n  | 'too-short'\n  | 'missing-center'\n  | 'already-found'\n  | 'unknown-word'\n  | 'invalid-letters';\n\nconst Hive = () => {\n  return (\n    <div className={classes.container}>\n      <Header />\n      <div className={classes.gameContainer}>\n        <div className={classes.buttonsContainer}>\n          <Messages />\n          <Buttons />\n        </div>\n        <Sidebar />\n      </div>\n    </div>\n  );\n};\n\nexport default Hive;\n","import Hive from 'Hive';\nimport GameLoader from 'GameLoader';\nimport { RecoilRoot } from 'recoil';\nimport { useGameId } from 'hooks';\n\nconst Play = () => {\n  const { gameHash } = useGameId();\n  return (\n    <RecoilRoot>\n      <RecoilRoot key={gameHash}>\n        <GameLoader>\n          <Hive />\n        </GameLoader>\n      </RecoilRoot>\n    </RecoilRoot>\n  );\n};\n\nexport default Play;\n","import './App.css';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Play from './pages/Play';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Play />\n        </Route>\n\n        <Route path=\"/:gameId\">\n          <Play />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}